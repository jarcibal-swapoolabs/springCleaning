{
	"info": {
		"_postman_id": "cd2b9509-8772-4b7c-ba7d-614a1ccafb4c",
		"name": "Spring7 Integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Non-2FA",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "SWP",
							"item": [
								{
									"name": "Tear Down",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "198acc8c-d7bf-4955-b352-8b2267df3795",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/teardown",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"teardown"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69d852db-1797-4e6b-8e5f-00b97417894c",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/create-db",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"create-db"
											]
										}
									},
									"response": []
								},
								{
									"name": "Provision Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "11fa79aa-10dc-45f3-aa76-e9fcde999d00",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/data/provision",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"data",
												"provision"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "KMY",
							"item": [
								{
									"name": "Tear Down",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f23a6414-871f-4912-b6dc-05a3f52c0f61",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/integration/teardown",
											"host": [
												"{{url}}"
											],
											"path": [
												"integration",
												"teardown"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37d33cf9-f43c-413b-b359-26896917e544",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/integration/create-db",
											"host": [
												"{{url}}"
											],
											"path": [
												"integration",
												"create-db"
											]
										}
									},
									"response": []
								},
								{
									"name": "Provision Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b4fb21c5-b34a-408f-818b-1b625e6dd129",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"module_id\", jsonData.module_id);",
													"    pm.environment.set(\"question_id\", jsonData.question_ids[0]);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/integration/data/provision",
											"host": [
												"{{url}}"
											],
											"path": [
												"integration",
												"data",
												"provision"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Deactivate SPR-620",
					"item": [
						{
							"name": "Change Feature SPR-620 Status to Inactive",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "0",
											"type": "text"
										},
										{
											"key": "key",
											"value": "SPR-620",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Registration",
					"item": [
						{
							"name": "Email Validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "30cf295b-e0c0-4a18-b857-aed7faf758be",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/email/validate?email={{email}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"email",
										"validate"
									],
									"query": [
										{
											"key": "email",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Email Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "6b1f279d-d71d-4a5f-b9ec-89e02badd0f9",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/email/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"email",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "6b1f279d-d71d-4a5f-b9ec-89e02badd0f9",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/email/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"email",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Email Verification ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "12cda998-0976-4616-afff-de6487a2e951",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/email/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"email",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"register 201 and save env variable\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "2883b247-4d2f-440c-8238-4253f4708a6f",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "sponsor_code",
											"value": "{{sponsor_code}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "03ADlfD1-aEhuUNQsMNuX-geEWl74nzntjRWPnCLkzGLcuCApdHlwZ0ZavrDTwZU-0IOl1tzJhdUfTyqGyri1eSNn7k4jcCCA4JBJIYNour9t_17yFMeQmtyjE5abDKS0mGTae9l7KyTYGrIqfKf0_llCTCVcco9tz7WNyMsOc3l2J_DDWdBaH0zZU6DJXSiTYNKeAp4lpO3KWCVdtb8DYt6dgYBhL86AfwClyyTn-8hkedSkSDPNaLwm_5kstoZr6FYQ42GGcEwAibgZIbDNTqdAYDStBOzTv-TETtmecNhSMLaUFfNLstzPVVuwRvsdiLAiJf4JM98Uc",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Username Validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "c608e2e0-392d-4632-9af7-9e20303f2643",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/username/validate?user_name={{user_name}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"username",
										"validate"
									],
									"query": [
										{
											"key": "user_name",
											"value": "{{user_name}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Mobile Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "b29b33f2-e1e6-44db-9896-1f386b0df268",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "phone_code",
											"value": "{{phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{phone_number}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/mobile/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"mobile",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Verification",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "495b3d61-26c6-454b-9f8f-01fb1ff43909",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "phone_code",
											"value": "{{phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{phone_number}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/mobile/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"mobile",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password Strength Check Via Swapoo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88b06633-5bf2-4b93-9c57-cf26f8d06831",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"score\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "first_name",
											"value": "carlo",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "santos",
											"type": "text"
										},
										{
											"key": "date_of_birth",
											"value": "11/22/1990",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/password-strength/check",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"password-strength",
										"check"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "64841312-5644-4157-bb29-97269f15bd00",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "carlo",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "santos",
											"type": "text"
										},
										{
											"key": "date_of_birth",
											"value": "11/22/1990",
											"type": "text"
										},
										{
											"key": "address",
											"value": "test address",
											"type": "text"
										},
										{
											"key": "zip_code",
											"value": "1300",
											"type": "text"
										},
										{
											"key": "preferred_language",
											"value": "en-EN",
											"type": "text"
										},
										{
											"key": "user_name",
											"value": "{{user_name}}",
											"type": "text"
										},
										{
											"key": "phone_code",
											"value": "{{phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{phone_number}}",
											"type": "text"
										},
										{
											"key": "swapoo_password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "country_code",
											"value": "PH",
											"type": "text"
										},
										{
											"key": "address_line_1",
											"value": "adrress line 1",
											"type": "text"
										},
										{
											"key": "other_region",
											"value": "Metro Manila",
											"type": "text"
										},
										{
											"key": "other_city",
											"value": "Quezon City",
											"type": "text"
										},
										{
											"key": "phone_code",
											"value": "{{phone_code}}",
											"type": "text"
										},
										{
											"key": "\"address_line_1\"",
											"value": "\"string\",\n  \"address_line_2\": \"string\",\n  \"city_id\": \"string\",\n  \"region_code\": \"string\",\n  \"country_code\": \"string\",:",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/register/complete",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"register",
										"complete"
									]
								}
							},
							"response": []
						}						
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Referral Code",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get referral code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "908910d6-8873-4d4f-b5b5-8cc3598d6e10",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"referral_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"referral_code\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/referral-code",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"referral-code"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Share referral code",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9785607a-7e66-4983-8fe6-e834015243b5",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",\"bonus_status\":{",
											"                    \"type\":\"array\",",
											"                    \"items\":[",
											"                        {",
											"                            \"type\":\"object\",",
											"                            \"properties\":{",
											"                                \"bonus_type\":{",
											"                                    \"type\":\"string\"",
											"                                },",
											"                                \"is_eligible\":{",
											"                                    \"type\":\"boolean\"",
											"                                }",
											"                                ",
											"                            }",
											"                        }",
											"                    ]",
											"                    ",
											"                },",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\",\"bonus_status\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Share referral code (single)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f0c754c-c02f-4584-b604-afcd1c95097d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email_list\": [\"jhesed.tacadena@swapoolabs.com\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/referral-code/share",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"referral-code",
										"share"
									]
								}
							},
							"response": []
						},
						{
							"name": "Share referral code (multiple)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42e818a8-d2d1-473b-950a-07a3d294c450",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email_list\": [\"jhesed.tacadena@swapoolabs.com\", \"jhesed.tacadena@makatisoft.com\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/referral-code/share",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"referral-code",
										"share"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get sponsor code",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get referral code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60176f0c-d879-40f0-8e7f-7ef4ba02b790",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"referral_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"referral_code\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"referral_code\", jsonData.referral_code);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/referral-code",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"referral-code"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sponsor code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3e723ac-ef5c-4798-aa08-8a5ae4fbcdc0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"user_name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"first_name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"last_name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"avatar_link\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"user_name\", \"first_name\", ",
											"                   \"middle_name\", \"last_name\", \"avatar_link\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test('Schema is valid', function() {",
											"//   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"// });"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "28b4c9b0-845d-4ad4-aa81-a8ad04ab6fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/sponsor?referral_code={{referral_code}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sponsor"
									],
									"query": [
										{
											"key": "referral_code",
											"value": "{{referral_code}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get default avatars",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get default avatars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56557fb8-c5c9-4fdd-aff2-206573248a45",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"avatars\": {",
											"            \"type\": \"array\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"avatars\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/profile/avatar/defaults",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"avatar",
										"defaults"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get asset balance",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get asset balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97872b3d-1513-4d87-824d-8b33501d02b3",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"balance\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"balance_in_usd\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"asset_type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"account_number\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"first_name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"last_name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"balance\", \"balance_in_usd\", \"asset_type\", \"account_number\",",
											"                   \"first_name\", \"last_name\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/asset/balance?asset_type=BTC",
									"host": [
										"{{url}}"
									],
									"path": [
										"asset",
										"balance"
									],
									"query": [
										{
											"key": "asset_type",
											"value": "BTC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Asset balance via notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74e92bfb-769b-4984-a1d5-fb64d0fe2540",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"//   TODO: Commented out due to dynamic UUID id in SWP side.",
											"//     pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "API-Key",
										"value": "API_KEY"
									},
									{
										"key": "Signature",
										"value": "signature"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email_list\": [\"jhesed.tacadena@swapoolabs.com\", \"jhesed.tacadena@gmail.com\"]\n}"
								},
								"url": {
									"raw": "{{url}}/asset/balance?asset_type=BTC&swp_account_id={{swp_id}}&asset_wallet_id={{swp_asset_wallet_id}}&new_asset_balance=1&nonce=12345",
									"host": [
										"{{url}}"
									],
									"path": [
										"asset",
										"balance"
									],
									"query": [
										{
											"key": "asset_type",
											"value": "BTC"
										},
										{
											"key": "swp_account_id",
											"value": "{{swp_id}}"
										},
										{
											"key": "asset_wallet_id",
											"value": "{{swp_asset_wallet_id}}"
										},
										{
											"key": "new_asset_balance",
											"value": "1"
										},
										{
											"key": "nonce",
											"value": "12345"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get security matrix rules",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get security matrix rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11678c85-d2ee-46eb-b87f-d3477ff14b40",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"rules\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"rules\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-matrix?process=product_purchase",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-matrix"
									],
									"query": [
										{
											"key": "process",
											"value": "product_purchase"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get security matrix rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/security_matrix/rules?process=product_purchase",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"security_matrix",
												"rules"
											],
											"query": [
												{
													"key": "process",
													"value": "product_purchase"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "34",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:49 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"rules\": [\"PP\"], \"success\": true}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},				
				{
					"name": "Get purchase history",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf2b4bc9-1502-4096-b03b-0e358fca2a99",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											"",
											"",
											"pm.environment.set(\"token\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/login?login_credential={{email}}&password={{password}}&captcha_response=test",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{email}}"
										},
										{
											"key": "password",
											"value": "{{password}}"
										},
										{
											"key": "captcha_response",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get purchase history",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84318785-64df-4910-9ffa-d659a5cd97b2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"purchase_history\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"transaction_date\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"status\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"swapoo_account_id\": {",
											"                    \"type\": \"number\"",
											"                },",
											"                \"amount\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_name\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"            }",
											"        },",
											"        ",
											"    }, \"required\": [\"success\", \"purchase_history\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											"",
											"",
											"pm.environment.set(\"token\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/purchase/transactions/history",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"transactions",
										"history"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Package via Swapoo",
					"item": [
						{
							"name": "Purchase for Self",
							"item": [
								{
									"name": "Provision Wallet Balance",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"data",
												"wst"
											],
											"query": [
												{
													"key": "login_credential",
													"value": "{{login_credential}}"
												},
												{
													"key": "wst",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(KMY) Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"token\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"profile_data\":{",
													"            \"type\":\"object\",",
													"            \"properties\":{",
													"                \"first_name\": \"string\",",
													"                \"middle_name\": \"null\",",
													"                \"last_name\": \"string\",",
													"                \"city_id\": \"null\",",
													"                \"city_name\": \"null\",",
													"                \"date_of_birth\": \"string\",",
													"                \"address_line_1\": \"string\",",
													"                \"address_line_2\": \"null\",",
													"                \"zip_code\": \"integer\",",
													"                \"avatar_link\": \"null\",",
													"                \"time_zone\": \"null\",",
													"                \"country_code\": \"string\",",
													"                \"country_name\": \"string\",",
													"                \"region_code\": \"null\",",
													"                \"region_name\": \"null\",",
													"                \"other_city\": \"string\",",
													"                \"other_region\": \"string\",",
													"                \"user_name\": \"string\",",
													"                \"email\": \"string\",",
													"                \"phone_code\": \"string\",",
													"                \"mobile_digit\": \"string\",",
													"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
													"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
													"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
													"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
													"                            \"email\",\"phone_code\",\"mobile_digit\"]",
													"        }",
													"        ",
													"    }, \"required\":[\"success\", \"token\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"token\", jsonData.token);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "captcha_response",
													"value": "{{captcha_response}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/account/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"login"
											]
										},
										"description": "Login user"
									},
									"response": [
										{
											"name": "1 - Login",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-origin",
													"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
													"name": "access-control-allow-origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "content-length",
													"value": "715",
													"name": "content-length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "content-type",
													"value": "application/json",
													"name": "content-type",
													"description": "The mime type of this content"
												},
												{
													"key": "date",
													"value": "Tue, 23 Jan 2018 08:09:11 GMT",
													"name": "date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "server",
													"value": "Werkzeug/0.12.2 Python/3.6.3",
													"name": "server",
													"description": "A name for the server"
												},
												{
													"key": "vary",
													"value": "Origin",
													"name": "vary",
													"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
												}
											],
											"cookie": [],
											"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
										},
										{
											"name": "0 - Login",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "close",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "715",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 26 Jan 2018 00:40:34 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "gunicorn/19.7.1",
													"name": "Server",
													"description": "A name for the server"
												}
											],
											"cookie": [],
											"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
										}
									]
								},
								{
									"name": "(KMY) Build transaction ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c378546a-70a7-4f29-876e-42864014279f",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\": {",
													"        \"packages\": {",
													"            \"type\": \"array\",",
													"            \"properties\": {",
													"                \"package_code\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_title\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_price\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_currency\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_description\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_images\": {",
													"                    \"type\": \"array\"",
													"                },",
													"                \"is_purchasable\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"qr_string\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"share_link\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"tx_id\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"success\": {",
													"                    \"type\": \"boolean\"",
													"                }",
													"                ",
													"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\"]",
													"        },",
													"    } ",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"merchant_tx_id\", jsonData.tx_id);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/package?package_code={{package_code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"package"
											],
											"query": [
												{
													"key": "package_code",
													"value": "{{package_code}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get package details",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "close",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "611",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 26 Jan 2018 08:21:55 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "gunicorn/19.7.1",
													"name": "Server",
													"description": "A name for the server"
												}
											],
											"cookie": [],
											"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"success\": true, \"is_purchasable\": true, \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\"}"
										}
									]
								},
								{
									"name": "(SWP) Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12b7068-350c-4ed1-beb0-bdf34895b4d4",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"token\": {",
													"            \"type\": \"string\"",
													"        },",
													"        ",
													"    }, \"required\":[\"success\", \"token\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"token\", jsonData.token);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/account/login?login_credential={{email}}&password={{swapoo_password}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"account",
												"login"
											],
											"query": [
												{
													"key": "login_credential",
													"value": "{{email}}"
												},
												{
													"key": "password",
													"value": "{{swapoo_password}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Mock Account Approval",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/approve-account?email={{email}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"approve-account"
											],
											"query": [
												{
													"key": "email",
													"value": "{{email}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Get purchase details from Kamekyo QR code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f95a99e0-684b-43d3-88be-1fa797fc023c",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_name\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"amount\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"currency_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_transaction_status\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"expiry_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"profile_data\": {",
													"            \"properties\": {",
													"                \"user_name\": {",
													"                    \"type\": \"string\"",
													"                }",
													"            }",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_type\": {",
													"            \"type\": \"string\"",
													"        },",
													"    },",
													"    \"required\": [\"success\", \"package_code\", \"package_name\", \"amount\", \"currency_code\",",
													"                \"package_transaction_status\", \"transaction_date\", \"expiry_date\",",
													"                \"profile_data\", \"package_title\", \"package_price\", \"package_currency\", \"transaction_type\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/details?merchant={{merchant_name}}&tx_id={{merchant_tx_id}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"details"
											],
											"query": [
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Verify password/payment password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eea5728e-2135-423e-89b3-e5f150472959",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"process_id\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"usd_btc_rate\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_btc_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_description\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"tx_id\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"paying_for_swapoo_account_id\" : {",
													"            \"type\": \"string\"",
													"        },",
													"    \"required\": [\"success\", \"process_id\", \"package_price\", \"usd_btc_rate\", \"package_btc_price\", \"transaction_date\", \"package_code\", \"package_title\", \"package_currency\", \"package_description\", ",
													"        \"tx_id\", \"paying_for_swapoo_account_id\"]",
													"    }",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/password/verify?password={{swapoo_password}}&tx_id={{merchant_tx_id}}&merchant={{merchant_name}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"password",
												"verify"
											],
											"query": [
												{
													"key": "password",
													"value": "{{swapoo_password}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Final confirmation screen",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea7364e3-e1ba-4adb-bbff-263de5af6231",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"usd_btc_rate\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_btc_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_description\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"tx_id\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"    },",
													"    \"required\": [\"package_code\", \"package_title\", \"package_price\", \"usd_btc_rate\",",
													"                \"package_btc_price\", \"package_description\",",
													"                \"transaction_date\", \"tx_id\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/details/final?merchant={{merchant_name}}&tx_id={{merchant_tx_id}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"details",
												"final"
											],
											"query": [
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Confirm purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c323989d-318f-4e36-81c1-6fd9409806b8",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"confirmation_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"    \"required\": [\"success\", \"confirmation_code\"]",
													"    }",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});                                                                   "
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/confirm?tx_id={{merchant_tx_id}}&merchant={{merchant_name}}&tag={{merchant_tag}}&process_id={{process_id}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"confirm"
											],
											"query": [
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Registration 2nd user",
							"item": [
								{
									"name": "Email Validation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "30cf295b-e0c0-4a18-b857-aed7faf758be",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/account/email/validate?email={{email2}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"email",
												"validate"
											],
											"query": [
												{
													"key": "email",
													"value": "{{email2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Email Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "6b1f279d-d71d-4a5f-b9ec-89e02badd0f9",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "email",
													"value": "{{email2}}",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/verification/email/code/generate",
											"host": [
												"{{url}}"
											],
											"path": [
												"verification",
												"email",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Email Verification ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "12cda998-0976-4616-afff-de6487a2e951",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "email",
													"value": "{{email2}}",
													"type": "text"
												},
												{
													"key": "verification_code",
													"value": "{{verification_code}}",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/verification/email/code/verify",
											"host": [
												"{{url}}"
											],
											"path": [
												"verification",
												"email",
												"code",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"token\": {",
													"            \"type\": \"string\"",
													"        }",
													"    }, \"required\":[\"success\", \"token\"]",
													"};",
													"pm.test(\"register 201 and save env variable\", function () {",
													"    pm.response.to.have.status(201);",
													"    pm.environment.set(\"token\", jsonData.token);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "2883b247-4d2f-440c-8238-4253f4708a6f",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "email",
													"value": "{{email2}}",
													"type": "text"
												},
												{
													"key": "verification_code",
													"value": "{{verification_code}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												},
												{
													"key": "sponsor_code",
													"value": "{{sponsor_code}}",
													"type": "text"
												},
												{
													"key": "captcha_response",
													"value": "{{captcha_response}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/account/register",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"register"
											]
										}
									},
									"response": []
								},
								{
									"name": "Username Validation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "c608e2e0-392d-4632-9af7-9e20303f2643",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/account/username/validate?user_name={{user_name2}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"username",
												"validate"
											],
											"query": [
												{
													"key": "user_name",
													"value": "{{user_name2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Mobile Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "b29b33f2-e1e6-44db-9896-1f386b0df268",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "phone_code",
													"value": "{{phone_code}}",
													"type": "text"
												},
												{
													"key": "mobile_digit",
													"value": "{{phone_number2}}",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/verification/mobile/code/generate",
											"host": [
												"{{url}}"
											],
											"path": [
												"verification",
												"mobile",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Mobile Verification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "495b3d61-26c6-454b-9f8f-01fb1ff43909",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "phone_code",
													"value": "{{phone_code}}",
													"type": "text"
												},
												{
													"key": "mobile_digit",
													"value": "{{phone_number2}}",
													"type": "text"
												},
												{
													"key": "verification_code",
													"value": "{{verification_code}}",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/verification/mobile/code/verify",
											"host": [
												"{{url}}"
											],
											"path": [
												"verification",
												"mobile",
												"code",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register Complete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        }",
													"    }, \"required\":[\"success\"]",
													"};",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												],
												"id": "64841312-5644-4157-bb29-97269f15bd00",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "first_name",
													"value": "jhesed",
													"type": "text"
												},
												{
													"key": "last_name",
													"value": "tacadena",
													"type": "text"
												},
												{
													"key": "date_of_birth",
													"value": "11/22/1990",
													"type": "text"
												},
												{
													"key": "address",
													"value": "test address",
													"type": "text"
												},
												{
													"key": "zip_code",
													"value": "1300",
													"type": "text"
												},
												{
													"key": "preferred_language",
													"value": "en-EN",
													"type": "text"
												},
												{
													"key": "user_name",
													"value": "{{user_name2}}",
													"type": "text"
												},
												{
													"key": "phone_code",
													"value": "{{phone_code}}",
													"type": "text"
												},
												{
													"key": "mobile_digit",
													"value": "{{phone_number2}}",
													"type": "text"
												},
												{
													"key": "swapoo_password",
													"value": "{{swapoo_password}}",
													"type": "text"
												},
												{
													"key": "country_code",
													"value": "PH",
													"type": "text"
												},
												{
													"key": "address_line_1",
													"value": "adrress line 1",
													"type": "text"
												},
												{
													"key": "other_region",
													"value": "Metro Manila",
													"type": "text"
												},
												{
													"key": "other_city",
													"value": "Quezon City",
													"type": "text"
												},
												{
													"key": "phone_code",
													"value": "{{phone_code}}",
													"type": "text"
												},
												{
													"key": "\"address_line_1\"",
													"value": "\"string\",\n  \"address_line_2\": \"string\",\n  \"city_id\": \"string\",\n  \"region_code\": \"string\",\n  \"country_code\": \"string\",:",
													"type": "text"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/account/register/complete",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"register",
												"complete"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Purchase for Other",
							"item": [
								{
									"name": "Provision Wallet Balance",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"data",
												"wst"
											],
											"query": [
												{
													"key": "login_credential",
													"value": "{{login_credential}}"
												},
												{
													"key": "wst",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(KMY) Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"token\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"profile_data\":{",
													"            \"type\":\"object\",",
													"            \"properties\":{",
													"                \"first_name\": \"string\",",
													"                \"middle_name\": \"null\",",
													"                \"last_name\": \"string\",",
													"                \"city_id\": \"null\",",
													"                \"city_name\": \"null\",",
													"                \"date_of_birth\": \"string\",",
													"                \"address_line_1\": \"string\",",
													"                \"address_line_2\": \"null\",",
													"                \"zip_code\": \"integer\",",
													"                \"avatar_link\": \"null\",",
													"                \"time_zone\": \"null\",",
													"                \"country_code\": \"string\",",
													"                \"country_name\": \"string\",",
													"                \"region_code\": \"null\",",
													"                \"region_name\": \"null\",",
													"                \"other_city\": \"string\",",
													"                \"other_region\": \"string\",",
													"                \"user_name\": \"string\",",
													"                \"email\": \"string\",",
													"                \"phone_code\": \"string\",",
													"                \"mobile_digit\": \"string\",",
													"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
													"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
													"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
													"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
													"                            \"email\",\"phone_code\",\"mobile_digit\"]",
													"        }",
													"        ",
													"    }, \"required\":[\"success\", \"token\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"token\", jsonData.token);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "{{email2}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "captcha_response",
													"value": "{{captcha_response}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/account/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"account",
												"login"
											]
										},
										"description": "Login user"
									},
									"response": [
										{
											"name": "0 - Login",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "close",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "715",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 26 Jan 2018 00:40:34 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "gunicorn/19.7.1",
													"name": "Server",
													"description": "A name for the server"
												}
											],
											"cookie": [],
											"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
										},
										{
											"name": "1 - Login",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-origin",
													"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
													"name": "access-control-allow-origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "content-length",
													"value": "715",
													"name": "content-length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "content-type",
													"value": "application/json",
													"name": "content-type",
													"description": "The mime type of this content"
												},
												{
													"key": "date",
													"value": "Tue, 23 Jan 2018 08:09:11 GMT",
													"name": "date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "server",
													"value": "Werkzeug/0.12.2 Python/3.6.3",
													"name": "server",
													"description": "A name for the server"
												},
												{
													"key": "vary",
													"value": "Origin",
													"name": "vary",
													"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
												}
											],
											"cookie": [],
											"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
										}
									]
								},
								{
									"name": "(KMY) Build transaction ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c378546a-70a7-4f29-876e-42864014279f",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\": {",
													"        \"packages\": {",
													"            \"type\": \"array\",",
													"            \"properties\": {",
													"                \"package_code\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_title\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_price\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_currency\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_description\": {",
													"                    \"type\": \"string\"",
													"                },",
													"                \"package_images\": {",
													"                    \"type\": \"array\"",
													"                },",
													"                \"is_purchasable\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"qr_string\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"share_link\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"tx_id\": {",
													"                    \"type\": \"boolean\"",
													"                },",
													"                \"success\": {",
													"                    \"type\": \"boolean\"",
													"                }",
													"                ",
													"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\"]",
													"        },",
													"    } ",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"merchant_tx_id\", jsonData.tx_id);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/package?package_code={{package_code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"package"
											],
											"query": [
												{
													"key": "package_code",
													"value": "{{package_code}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get package details",
											"originalRequest": {
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "close",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "611",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 26 Jan 2018 08:21:55 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "gunicorn/19.7.1",
													"name": "Server",
													"description": "A name for the server"
												}
											],
											"cookie": [],
											"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"success\": true, \"is_purchasable\": true, \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\"}"
										}
									]
								},
								{
									"name": "(SWP) Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12b7068-350c-4ed1-beb0-bdf34895b4d4",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"token\": {",
													"            \"type\": \"string\"",
													"        },",
													"        ",
													"    }, \"required\":[\"success\", \"token\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"token\", jsonData.token);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/account/login?login_credential={{email}}&password={{swapoo_password}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"account",
												"login"
											],
											"query": [
												{
													"key": "login_credential",
													"value": "{{email}}"
												},
												{
													"key": "password",
													"value": "{{swapoo_password}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Mock Account Approval",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/integration/approve-account?email={{email}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"integration",
												"approve-account"
											],
											"query": [
												{
													"key": "email",
													"value": "{{email}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Get purchase details from Kamekyo QR code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f95a99e0-684b-43d3-88be-1fa797fc023c",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_name\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"amount\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"currency_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_transaction_status\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"expiry_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"profile_data\": {",
													"            \"properties\": {",
													"                \"user_name\": {",
													"                    \"type\": \"string\"",
													"                }",
													"            }",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_type\": {",
													"            \"type\": \"string\"",
													"        },",
													"    },",
													"    \"required\": [\"success\", \"package_code\", \"package_name\", \"amount\", \"currency_code\",",
													"                \"package_transaction_status\", \"transaction_date\", \"expiry_date\",",
													"                \"profile_data\", \"package_title\", \"package_price\", \"package_currency\", \"transaction_type\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/details?merchant={{merchant_name}}&tx_id={{merchant_tx_id}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"details"
											],
											"query": [
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Verify password/payment password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18437f73-2747-4bfc-9e35-12aee77501a4",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"process_id\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"usd_btc_rate\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_btc_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_description\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"tx_id\" : {",
													"            \"type\": \"string\"",
													"        },",
													"        \"paying_for_swapoo_account_id\" : {",
													"            \"type\": \"string\"",
													"        },",
													"    \"required\": [\"success\", \"process_id\", \"package_price\", \"usd_btc_rate\", \"package_btc_price\", \"transaction_date\", \"package_code\", \"package_title\", \"package_currency\", \"package_description\", ",
													"        \"tx_id\", \"paying_for_swapoo_account_id\"]",
													"    }",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set(\"process_id\", jsonData.process_id);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/password/verify?password={{swapoo_password}}&tx_id={{merchant_tx_id}}&merchant={{merchant_name}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"password",
												"verify"
											],
											"query": [
												{
													"key": "password",
													"value": "{{swapoo_password}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Final confirmation screen",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea7364e3-e1ba-4adb-bbff-263de5af6231",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"package_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_title\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"usd_btc_rate\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_btc_price\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_currency\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"package_description\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"transaction_date\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"tx_id\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"    },",
													"    \"required\": [\"package_code\", \"package_title\", \"package_price\", \"usd_btc_rate\",",
													"                \"package_btc_price\", \"package_description\",",
													"                \"transaction_date\", \"tx_id\"]",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/details/final?merchant={{merchant_name}}&tx_id={{merchant_tx_id}}&tag={{merchant_tag}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"details",
												"final"
											],
											"query": [
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(SWP) Confirm purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c323989d-318f-4e36-81c1-6fd9409806b8",
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"var schema = {",
													"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
													"    \"properties\":{",
													"        \"success\": {",
													"            \"type\": \"boolean\"",
													"        },",
													"        \"confirmation_code\": {",
													"            \"type\": \"string\"",
													"        },",
													"    \"required\": [\"success\", \"confirmation_code\"]",
													"    }",
													"};",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Schema is valid', function() {",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
													"});                                                                   "
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{swapoo_url}}/merchant/purchase/confirm?tx_id={{merchant_tx_id}}&merchant={{merchant_name}}&tag={{merchant_tag}}&process_id={{process_id}}",
											"host": [
												"{{swapoo_url}}"
											],
											"path": [
												"merchant",
												"purchase",
												"confirm"
											],
											"query": [
												{
													"key": "tx_id",
													"value": "{{merchant_tx_id}}"
												},
												{
													"key": "merchant",
													"value": "{{merchant_name}}"
												},
												{
													"key": "tag",
													"value": "{{merchant_tag}}"
												},
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "SPR-620 Updated behavior of Shared link",
					"item": [
						{
							"name": "Change Feature SPR-620 Status to Active",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "key",
											"value": "SPR-620",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "(KMY) Build transaction ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c378546a-70a7-4f29-876e-42864014279f",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                }",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"merchant_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package?package_code={{package_code}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package"
									],
									"query": [
										{
											"key": "package_code",
											"value": "{{package_code}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package details",
									"originalRequest": {
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "611",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:55 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"success\": true, \"is_purchasable\": true, \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\"}"
								}
							]
						},
						{
							"name": "Logged in with transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70ed74f7-deb5-4742-93d1-2398f8e121c9",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"purchase_for_account\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"date_registered\": {",
											"                    \"type\": \"string\"    ",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                }",
											"            }, \"required\": [\"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"purchase_for_account\", \"date_registered\", \"qr_string\", \"success\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package?tx_id={{merchant_tx_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package"
									],
									"query": [
										{
											"key": "tx_id",
											"value": "{{merchant_tx_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "NOT Logged in with transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70ed74f7-deb5-4742-93d1-2398f8e121c9",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"purchase_for_account\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"date_registered\": {",
											"                    \"type\": \"string\"    ",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                }",
											"            }, \"required\": [\"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"purchase_for_account\", \"date_registered\", \"qr_string\", \"success\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package?tx_id={{merchant_tx_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package"
									],
									"query": [
										{
											"key": "tx_id",
											"value": "{{merchant_tx_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Feature SPR-620 Status to Inactive",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "0",
											"type": "text"
										},
										{
											"key": "key",
											"value": "SPR-620",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get ID Card types",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf2b4bc9-1502-4096-b03b-0e358fca2a99",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											"",
											"",
											"pm.environment.set(\"token\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/login?login_credential={{email}}&password={{password}}&captcha_response={{captcha_response}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{email}}"
										},
										{
											"key": "password",
											"value": "{{password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get ID card types (no country code)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/identification-card",
									"host": [
										"{{url}}"
									],
									"path": [
										"identification-card"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get ID card types (with country code)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/identification-card?country_code=PH",
									"host": [
										"{{url}}"
									],
									"path": [
										"identification-card"
									],
									"query": [
										{
											"key": "country_code",
											"value": "PH"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Recruit (Binary Tree)",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Invite",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/invite/enable",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"invite",
										"enable"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Referral Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb3aa35e-42e7-4d10-9283-61e06a732a53",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"referral_code\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"referral_code\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"binary_referral_code\", jsonData.referral_code);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/referral-code",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"referral-code"
									]
								}
							},
							"response": []
						},
						{
							"name": "Email Validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "30cf295b-e0c0-4a18-b857-aed7faf758be",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/email/validate?email={{recruit_email}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"email",
										"validate"
									],
									"query": [
										{
											"key": "email",
											"value": "{{recruit_email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Email Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "6b1f279d-d71d-4a5f-b9ec-89e02badd0f9",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{recruit_email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/email/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"email",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Email Verification ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "12cda998-0976-4616-afff-de6487a2e951",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{recruit_email}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/email/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"email",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"register 201 and save env variable\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "2883b247-4d2f-440c-8238-4253f4708a6f",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{recruit_email}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{recruit_password}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "sponsor_code",
											"value": "{{binary_referral_code}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Username Validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "c608e2e0-392d-4632-9af7-9e20303f2643",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/account/username/validate?user_name={{recruit_user_name}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"username",
										"validate"
									],
									"query": [
										{
											"key": "user_name",
											"value": "{{recruit_user_name}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Mobile Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "b29b33f2-e1e6-44db-9896-1f386b0df268",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "phone_code",
											"value": "{{recruit_phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{recruit_phone_number}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/mobile/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"mobile",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Verification",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "495b3d61-26c6-454b-9f8f-01fb1ff43909",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "phone_code",
											"value": "{{recruit_phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{recruit_phone_number}}",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/mobile/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"mobile",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "64841312-5644-4157-bb29-97269f15bd00",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "jeby",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "santos",
											"type": "text"
										},
										{
											"key": "date_of_birth",
											"value": "09/13/1991",
											"type": "text"
										},
										{
											"key": "address",
											"value": "recruit test address",
											"type": "text"
										},
										{
											"key": "zip_code",
											"value": "1210",
											"type": "text"
										},
										{
											"key": "preferred_language",
											"value": "en-EN",
											"type": "text"
										},
										{
											"key": "user_name",
											"value": "{{recruit_user_name}}",
											"type": "text"
										},
										{
											"key": "phone_code",
											"value": "{{recruit_phone_code}}",
											"type": "text"
										},
										{
											"key": "mobile_digit",
											"value": "{{recruit_phone_number}}",
											"type": "text"
										},
										{
											"key": "swapoo_password",
											"value": "{{recruit_swapoo_password}}",
											"type": "text"
										},
										{
											"key": "country_code",
											"value": "PH",
											"type": "text"
										},
										{
											"key": "address_line_1",
											"value": "adrress line 1",
											"type": "text"
										},
										{
											"key": "other_region",
											"value": "Metro Manila",
											"type": "text"
										},
										{
											"key": "other_city",
											"value": "Quezon City",
											"type": "text"
										},
										{
											"key": "\"address_line_1",
											"value": "\"string\",\n  \"address_line_2\": \"string\",\n  \"city_id\": \"string\",\n  \"region_code\": \"string\",\n  \"country_code\": \"string\",:",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/register/complete",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"register",
										"complete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Referrer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d4a3516e-f1d6-4500-ab71-c91e50b1bd14",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"    pm.environment.set(\"account_id\", jsonData.profile_data.account_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{sponsor_email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{sponsor_password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Unplaced Recruits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c02a4f52-fccd-4f8d-8f37-4b98f75e9c2b",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"unplaced_recruits\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"user_name\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"account_id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"avatar_link\": {",
											"                    \"type\": \"string\"",
											"                }",
											"            }, \"required\": [\"user_name\", \"account_id\", \"avatar_link\"]",
											"        }",
											"    }, \"required\":[\"success\", \"unplaced_recruits\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"child_account_id\", jsonData.unplaced_recruits[0].account_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/tree/recruit/binary/unplaced",
									"host": [
										"{{url}}"
									],
									"path": [
										"tree",
										"recruit",
										"binary",
										"unplaced"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Binary Recruit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14fa1da6-2086-4b81-9c35-5a7a8124d2d0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "child_index_id",
											"value": "{{child_index_id}}",
											"type": "text"
										},
										{
											"key": "child_account_id",
											"value": "{{child_account_id}}",
											"type": "text"
										},
										{
											"key": "account_id",
											"value": "{{sponsor_account_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/tree/recruit/binary",
									"host": [
										"{{url}}"
									],
									"path": [
										"tree",
										"recruit",
										"binary"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Recruitment (Enrolment Tree)",
					"item": [
						{
							"name": "Login Referrer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Enrollment Tree Recruits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ada2c517-9e18-44b4-8bc5-38a6698a1d88",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"enrollment_tree_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"account_id\": \"string\",",
											"                \"parent_id\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"avatar_link\": \"string\",",
											"                \"date_registered\": \"string\",",
											"                \"current_career_level\": \"string\",",
											"                \"child_count\": \"integer\",",
											"                \"children\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                        \"account_id\": \"string\",",
											"                        \"parent_id\": \"integer\",",
											"                        \"user_name\": \"string\",",
											"                        \"avatar_link\": \"string\",",
											"                        \"child_count\": \"integer\"",
											"                    }",
											"                }",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"enrollment_tree_data\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/tree/recruit/enrollment",
									"host": [
										"{{url}}"
									],
									"path": [
										"tree",
										"recruit",
										"enrollment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Enrollment Tree by Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6a649df-956d-4dca-bc4b-4d0a8277b4f5",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"user_list\": {",
											"            \"type\": \"array\",",
											"            \"items\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"user_list\"]",
											"};",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/tree/recruit/enrollment/username/search?user_name={{recruit_user_name}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"tree",
										"recruit",
										"enrollment",
										"username",
										"search"
									],
									"query": [
										{
											"key": "user_name",
											"value": "{{recruit_user_name}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Pristine Account Qualification",
					"item": [
						{
						"name": "Login",
						"event": [
							{
							"listen": "test",
							"script": {
								"exec": [
								"var jsonData = pm.response.json();",
								"var schema = {",
								"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
								"    \"properties\":{",
								"        \"success\": {",
								"            \"type\": \"boolean\"",
								"        },",
								"        \"token\": {",
								"            \"type\": \"string\"",
								"        },",
								"        \"profile_data\":{",
								"            \"type\":\"object\",",
								"            \"properties\":{",
								"                \"first_name\": \"string\",",
								"                \"middle_name\": \"null\",",
								"                \"last_name\": \"string\",",
								"                \"city_id\": \"null\",",
								"                \"city_name\": \"null\",",
								"                \"date_of_birth\": \"string\",",
								"                \"address_line_1\": \"string\",",
								"                \"address_line_2\": \"null\",",
								"                \"zip_code\": \"integer\",",
								"                \"avatar_link\": \"null\",",
								"                \"time_zone\": \"null\",",
								"                \"country_code\": \"string\",",
								"                \"country_name\": \"string\",",
								"                \"region_code\": \"null\",",
								"                \"region_name\": \"null\",",
								"                \"other_city\": \"string\",",
								"                \"other_region\": \"string\",",
								"                \"user_name\": \"string\",",
								"                \"email\": \"string\",",
								"                \"phone_code\": \"string\",",
								"                \"mobile_digit\": \"string\",",
								"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
								"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
								"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
								"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
								"                            \"email\",\"phone_code\",\"mobile_digit\"]",
								"        }",
								"        ",
								"    }, \"required\":[\"success\", \"token\"]",
								"};",
								"pm.test(\"Status code is 200\", function () {",
								"    pm.response.to.have.status(200);",
								"    pm.environment.set(\"token\", jsonData.token);",
								"});",
								"",
								"pm.test('Schema is valid', function() {",
								"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
								"});"
								],
								"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
								"type": "text/javascript"
							}
							}
						],
						"request": {
							"method": "POST",
							"header": [],
							"body": {
							"mode": "formdata",
							"formdata": [
								{
								"key": "login_credential",
								"value": "{{email}}",
								"type": "text"
								},
								{
								"key": "password",
								"value": "{{password}}",
								"type": "text"
								},
								{
								"key": "captcha_response",
								"value": "{{captcha_response}}",
								"type": "text"
								}
							]
							},
							"url": {
							"raw": "{{url}}/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"account",
								"login"
							]
							},
							"description": "Login user"
						},
						"response": [
							{
							"name": "1 - Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
								"mode": "formdata",
								"formdata": [
									{
									"key": "login_credential",
									"value": "jhesed.tacadena@makatisoft.com",
									"type": "text"
									},
									{
									"key": "password",
									"value": "password",
									"type": "text"
									}
								]
								},
								"url": {
								"raw": "{{kamekyo_url}}/login",
								"host": [
									"{{kamekyo_url}}"
								],
								"path": [
									"login"
								]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
								"key": "access-control-allow-origin",
								"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
								"name": "access-control-allow-origin",
								"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
								"key": "content-length",
								"value": "715",
								"name": "content-length",
								"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
								"key": "content-type",
								"value": "application/json",
								"name": "content-type",
								"description": "The mime type of this content"
								},
								{
								"key": "date",
								"value": "Tue, 23 Jan 2018 08:09:11 GMT",
								"name": "date",
								"description": "The date and time that the message was sent"
								},
								{
								"key": "server",
								"value": "Werkzeug/0.12.2 Python/3.6.3",
								"name": "server",
								"description": "A name for the server"
								},
								{
								"key": "vary",
								"value": "Origin",
								"name": "vary",
								"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								}
							],
							"cookie": [],
							"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
							},
							{
							"name": "0 - Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
								"mode": "formdata",
								"formdata": [
									{
									"key": "login_credential",
									"value": "jhesed.tacadena@makatisoft.com",
									"type": "text"
									},
									{
									"key": "password",
									"value": "password",
									"type": "text"
									}
								]
								},
								"url": {
								"raw": "{{kamekyo_url}}/login",
								"host": [
									"{{kamekyo_url}}"
								],
								"path": [
									"login"
								]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
								"key": "Access-Control-Allow-Origin",
								"value": "*",
								"name": "Access-Control-Allow-Origin",
								"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
								"key": "Connection",
								"value": "close",
								"name": "Connection",
								"description": "Options that are desired for the connection"
								},
								{
								"key": "Content-Length",
								"value": "715",
								"name": "Content-Length",
								"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"description": "The mime type of this content"
								},
								{
								"key": "Date",
								"value": "Fri, 26 Jan 2018 00:40:34 GMT",
								"name": "Date",
								"description": "The date and time that the message was sent"
								},
								{
								"key": "Server",
								"value": "gunicorn/19.7.1",
								"name": "Server",
								"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
							}
						]
						},
						{
						"name": "Check Pristine Account",
						"event": [
							{
							"listen": "test",
							"script": {
								"id": "21aa6c49-47b0-4c8a-ac20-c4d6a5dc7daa",
								"exec": [
								"var jsonData = pm.response.json();",
								"var schema = {",
								"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
								"    \"properties\":{",
								"        \"is_qualified\": {",
								"            \"type\": \"boolean\"",
								"        },",
								"        \"success\": {",
								"            \"type\": \"boolean\"",
								"        }",
								"    }, \"required\":[\"success\", \"is_qualified\"]",
								"};",
								"pm.test(\"Status code is 200\", function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"pm.test('Schema is valid', function() {",
								"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
								"});"
								],
								"type": "text/javascript"
							}
							}
						],
						"request": {
							"method": "POST",
							"header": [
							{
								"key": "Token",
								"value": "{{token}}",
								"type": "text"
							}
							],
							"body": {
							"mode": "raw",
							"raw": ""
							},
							"url": {
							"raw": "{{url}}/account/pristine/check",
							"host": [
								"{{url}}"
							],
							"path": [
								"account",
								"pristine",
								"check"
							]
							}
						},
						"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Forgot Password (email)",
					"item": [
						{
							"name": "Retrieve Email and Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7466194-707c-43f0-9c01-76689b27ce1c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"mobile\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"email\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\", \"email\", \"mobile\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/contact-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"contact-details"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Code (email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/code/resend",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"code",
										"resend"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend code 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/verification/code/resend",
									"host": [
										"{{url}}"
									],
									"path": [
										"verification",
										"code",
										"resend"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5c978ac-b4db-4fda-84a1-0593d81138c6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49a9170e-e17f-46fe-a65f-f6ff47ffef26",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"reset"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Forgot Password (mobile)",
					"item": [
						{
							"name": "Retrieve Email and Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7466194-707c-43f0-9c01-76689b27ce1c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"mobile\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"email\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\", \"email\", \"mobile\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/contact-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"contact-details"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Code (mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "mobile",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5c978ac-b4db-4fda-84a1-0593d81138c6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49a9170e-e17f-46fe-a65f-f6ff47ffef26",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"reset"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Change Password",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9205cf38-9c1a-4d11-b540-05cddbf0c4a7",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password Verify Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8975c4a3-f0ca-4f9b-8372-88892466e566",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/change-password/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"change-password",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a357b78-68d3-4b0a-82a5-46449b4979c2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/change-password",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"change-password"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Locations",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9205cf38-9c1a-4d11-b540-05cddbf0c4a7",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Countries",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a4fbf83-8452-4b02-8ada-5faaca4de226",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"country_list\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"country_code\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"country_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"phone_code\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }, \"required\":[\"country_code\", \"country_name\", \"phone_code\"]",
											"            }",
											"        }",
											"    }, \"required\":[\"success\", \"country_list\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/location/countries",
									"host": [
										"{{url}}"
									],
									"path": [
										"location",
										"countries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Regions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d0f5079-9fb4-4a0a-ba1c-f85d8ab5230e",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"region_list\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"country_code\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"region_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"region_code\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }, \"required\":[\"country_code\", \"region_code\", \"region_name\"]",
											"            }",
											"        }",
											"    }, \"required\":[\"success\", \"region_list\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/location/regions?country_code={{country_code}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"location",
										"regions"
									],
									"query": [
										{
											"key": "country_code",
											"value": "{{country_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26b694c8-f17c-458f-a6f0-f1ffd72a3162",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"city_list\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"country_code\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"region_code\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"city_id\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"city_name\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }, \"required\":[\"country_code\", \"region_code\", \"city_id\", \"city_name\", \"latitude\", \"longitude\"]",
											"            }",
											"        }",
											"    }, \"required\":[\"success\", \"city_list\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/location/cities?country_code={{country_code}}&region_code={{region_code}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"location",
										"cities"
									],
									"query": [
										{
											"key": "country_code",
											"value": "{{country_code}}"
										},
										{
											"key": "region_code",
											"value": "{{region_code}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Language",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9205cf38-9c1a-4d11-b540-05cddbf0c4a7",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Languages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee3355a7-7c97-405c-b539-4233f1036e71",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"language_list\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"code\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"language\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"description\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"sub_description\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"icon_url\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }, \"required\":[\"code\", \"language\", \"description\", \"sub_description\", \"icon_url\"]",
											"            }",
											"        }",
											"    }, \"required\":[\"success\", \"language_list\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/languages",
									"host": [
										"{{url}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f0987bf3-6c83-42c7-8955-8d7d100ef8d6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "50916cda-2332-4297-abfb-277c2d0d2002",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Reset Security Question",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Security Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "498eca0f-c79d-46d8-a8c9-8f357b0945f1",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-question/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-question",
										"reset"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit Profile",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/account/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit profile",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "address_line_2",
											"value": "address_line_2",
											"type": "text"
										},
										{
											"key": "city_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "region_code",
											"value": "TEST",
											"type": "text"
										},
										{
											"key": "zip_code",
											"value": "1942",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/profile",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"profile"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit Preferred Language",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/account/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit preferred language",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ca7aada-5b83-48f8-8ab0-fe8489ca14e4",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "preferred_language",
											"value": "es-ES",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/profile/preferred-language",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"profile",
										"preferred-language"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Password Strength",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/account/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password Strength",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7f0fe8e-5fbf-4dfd-b11c-6fadfa05d416",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "new_password",
											"value": "new_password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/password-strength/check",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"password-strength",
										"check"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Avatar",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Avatar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "avatar_link",
											"value": "{{avatar_link}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/profile/avatar",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"profile",
										"avatar"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Profile",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/account/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a60209d0-4684-4821-9f93-46114257c27c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"is_security_questions_exist\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"profile_data\", \"is_security_questions_exist\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/profile",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe34cda9-b79b-4ea4-a28e-bedf65c4f604",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:5000/account/logout",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"account",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Courses",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "c2601993-9edd-4e5e-8fe9-7c33e26310fb",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "63598cae-63a4-49bc-804d-1005642cc991",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get Courses",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f033af4-1770-4baa-beff-0ce768b36466",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"courses\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"name\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"total_modules\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"submitted_modules\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"last_activity_date\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"thumbnail\": {",
											"                    \"type\": \"string\"",
											"                }, \"required\":[\"id\", \"name\", \"description\", \"total_modules\", \"submitted_modules\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"course_id\", jsonData.courses[0].id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/learning-center/courses",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Course by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1584feee-9d16-487b-ae73-b0ac36075ed6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"modules\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"name\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"total_questions\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"answered_questions\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"index\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"availability_date\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"last_activity_date\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"date_submitted\": {",
											"                    \"type\": \"string\"",
											"                }, \"required\":[\"id\", \"name\", \"description\", \"total_questions\", \"answered_questions\", \"index\", \"availability_date\", \"last_activity_date\", \"date_submitted\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/learning-center/courses?course_id={{course_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Module",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "867c70b2-6b1a-4297-ac97-42f77b05daad",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "fa4b2e46-b6f1-48c7-bca5-90a1b4baf403",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get Module by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92092bb6-2a9f-4fa6-9e9c-a861cf7e0547",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"index\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"name\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"description\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total_questions\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"answered_questions\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"id\", \"index\", \"name\", \"description\", \"total_questions\", \"answered_questions\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/learning-center/courses/modules?course_id={{course_id}}&module_id={{module_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"modules"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"equals": true
										},
										{
											"key": "module_id",
											"value": "{{module_id}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Question Answer",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "248f33a1-034a-4b06-b040-61bf0842a03d",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "3ff4b920-d0f7-4b39-b35f-aab1c153ceda",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Update Question Answer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16170e94-0ac1-464f-9dd3-156a7fc3f616",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"updated_questions\": {",
											"            \"type\": \"array\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"updated_questions\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"course_id\": {{course_id}},\n\t\"module_id\": {{module_id}},\n\t\"answers\": [\n\t\t{\n            \"question_id\": {{question_id}},\n            \"answer\": \"answer_updated\"\n        }\n    ]\n\t\n}"
								},
								"url": {
									"raw": "{{url}}/learning-center/questions/answers",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"questions",
										"answers"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Course Summary",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "99503841-ec43-478c-b2c4-a8312a4731fb",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "1b5ae089-18ea-4888-8bf9-58de6ae3e5b4",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get Course Run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e1c3879-8557-451b-897c-e7661ad4a458",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"course_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"runs\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"is_current\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"date_started\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"required\":[\"id\", \"is_current\", \"date_started\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"run_id\", jsonData.runs[jsonData.runs.length-1].id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/learning-center/courses/runs?course_id={{course_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"runs"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Course Summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb68822c-afd3-4ca9-9cf3-0a94cfcc3dfe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"preferred_language\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"course_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"run_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"         \"index\": {",
											"            \"type\": \"integer\"",
											"        },",
											"         \"module_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"         \"date_started\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"questions\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"question_id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"content\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"index\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"answer\": {",
											"                    \"type\": \"string\"",
											"                }, \"required\":[\"question_id\", \"title\", \"content\", \"index\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/learning-center/courses/summary?course_id={{course_id}}&module_id={{module_id}}&run_id={{run_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"summary"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"equals": true
										},
										{
											"key": "module_id",
											"value": "{{module_id}}",
											"equals": true
										},
										{
											"key": "run_id",
											"value": "{{run_id}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Restart Course",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "cf489a87-c86e-4074-b3b3-077ddc0369a6",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "edba0347-b8b0-4c8c-aab7-9d0ac74b921c",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Restart Course",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b006c28f-d527-4597-ad62-d4884035a6f5",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/learning-center/courses/restart",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"restart"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete Course Summary",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "ffd0d425-4732-470a-a596-702565be0674",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "907af2fd-672f-45a6-b8a0-808376d9433a",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get Course Run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e1c3879-8557-451b-897c-e7661ad4a458",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"course_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"runs\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"is_current\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"date_started\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"required\":[\"id\", \"is_current\", \"date_started\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"run_id\", jsonData.runs[jsonData.runs.length-1].id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/learning-center/courses/runs?course_id={{course_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"runs"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Course Summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e893cf48-a55d-42ec-bfd4-23a6b55f33fd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "course_id",
											"value": "{{course_id}}",
											"description": "",
											"type": "text"
										},
										{
											"key": "run_id",
											"value": "{{run_id}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/learning-center/courses/summary",
									"host": [
										"{{url}}"
									],
									"path": [
										"learning-center",
										"courses",
										"summary"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Feature Flagging",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3202520-d1ae-4739-b22c-9cb6c95643aa",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\", \"feature_flags\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"login_credential\": \"{{email}}\",\n\t\"password\": \"{{password}}\",\n\t\"captcha_response\": \"{{captcha_response}}\",\n\t\"feature_flags\": [\"S7MT-100\", \"S7MT-102\", \"S7MT-104\", \"S7MT-106\", \"S7MT-108\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Email and Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "087028b1-0c99-4ef7-a698-ef6a5ad4d5b3",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"feature_flags\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"feature_flags\": [\"S7MT-100\", \"S7MT-102\", \"S7MT-104\", \"S7MT-106\", \"S7MT-108\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/contact-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"contact-details"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Mobile Login",
					"item": [
						{
							"name": "Login Android",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Spring7/Android/deviceName/deviceModel/deviceManufacturer",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Login IOS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"type": "text",
										"value": "Spring7/iOS/Russ iPhone/iPhone XS Max/Apple"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						}
					]
				},
				{
					"name": "Mobile Login with Feature Flags",
					"item": [
						{
							"name": "Login Android",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Spring7/Android/deviceName/deviceModel/deviceManufacturer",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"login_credential\": \"{{email}}\",\n\t\"password\": \"{{password}}\",\n\t\"feature_flags\": [\"test_android_platform\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Login IOS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"type": "text",
										"value": "Spring7/iOS/Russ iPhone/iPhone XS Max/Apple"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"login_credential\": \"{{email}}\",\n\t\"password\": \"{{password}}\",\n\t\"feature_flags\": [\"test_ios_platform\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						}
					]
				},
				{
					"name": "Forgot Password (android) with Feature Flags",
					"item": [
						{
							"name": "Retrieve Email and Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7466194-707c-43f0-9c01-76689b27ce1c",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"mobile\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"email\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\", \"email\", \"mobile\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Spring7/Android/deviceName/deviceModel/deviceManufacturer"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"feature_flags\": [\"test_android_platform\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/contact-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"contact-details"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Code (mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "mobile",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5c978ac-b4db-4fda-84a1-0593d81138c6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49a9170e-e17f-46fe-a65f-f6ff47ffef26",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"reset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forgot Password (ios) with Feature Flags",
					"item": [
						{
							"name": "Retrieve Email and Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7466194-707c-43f0-9c01-76689b27ce1c",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"mobile\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"email\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"feature_flags\": {",
											"            \"type\": \"object\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\", \"email\", \"mobile\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Spring7/iOS/Russ iPhone/iPhone XS Max/Apple"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"feature_flags\": [\"test_ios_platform\"]\n}"
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/contact-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"contact-details"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Code (mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb165b95-bd83-4953-b55d-02164c8bf4fe",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "mobile",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/generate",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5c978ac-b4db-4fda-84a1-0593d81138c6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "verification_mode",
											"value": "email",
											"type": "text"
										},
										{
											"key": "verification_code",
											"value": "{{verification_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49a9170e-e17f-46fe-a65f-f6ff47ffef26",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/forgot-password/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"forgot-password",
										"reset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Pool Bonus",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Pool Bonus Info",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/pool-bonus/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"pool-bonus",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pool Bonus info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a541f7d4-fed2-4e4d-946c-c7564e324dcc",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"previous_pool_bonus_share\": \"string\",",
											"        \"previous_pool_bonus_currency_code\": \"string\",",
											"        \"previous_payout_date\": \"string\",",
											"        \"current_pool_bonus_share\": \"string\",",
											"        \"current_pool_bonus_currency_code\": \"string\",",
											"        \"current_pool_bonus_timestamp\": \"string\",",
											"        \"current_payout_date\": \"string\",",
											"        \"payout_period_duration\": \"integer\",",
											"        \"projected_bonus\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"level\": \"string\",",
											"                    \"amount\": \"string\"",
											"                }",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"success\",",
											"        \"previous_pool_bonus_share\",",
											"        \"previous_payout_date\",",
											"        \"current_pool_bonus_share\",",
											"        \"current_pool_bonus_timestamp\",",
											"        \"current_payout_date\",",
											"        \"payout_period_duration\"",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/bonus/pool-bonus",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"pool-bonus"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Pool Bonus Payout History",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Pool Bonus Info",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/pool-bonus/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"pool-bonus",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pool Bonus info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a541f7d4-fed2-4e4d-946c-c7564e324dcc",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"previous_pool_bonus_share\": \"string\",",
											"        \"previous_payout_date\": \"string\",",
											"        \"current_pool_bonus_share\": \"string\",",
											"        \"current_pool_bonus_timestamp\": \"string\",",
											"        \"current_payout_date\": \"string\",",
											"        \"payout_period_duration\": \"integer\",",
											"        \"projected_bonus\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"level\": \"string\",",
											"                    \"amount\": \"string\"",
											"                }",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"success\",",
											"        \"previous_pool_bonus_share\",",
											"        \"previous_payout_date\",",
											"        \"current_pool_bonus_share\",",
											"        \"current_pool_bonus_timestamp\",",
											"        \"current_payout_date\",",
											"        \"payout_period_duration\"",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/bonus/pool-bonus",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"pool-bonus"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pool Bonus Payout History",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "304eca31-eddc-459e-b2bb-e21610cba102",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"payout_history\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"payout_date\": \"string\",",
											"                    \"payout_amount\": \"integer\",",
											"                    \"earnings_qualified_levels\": {",
											"                        \"type\": \"array\",",
											"                        \"items\": {",
											"                            \"type\": \"object\",",
											"                            \"properties\": {",
											"                                \"level\": \"string\",",
											"                                \"amount\": \"integer\"",
											"                            },",
											"                            \"required\": [\"level\", \"amount\"]",
											"                        }",
											"                    }",
											"                },",
											"                \"required\": [\"payout_date\", \"payout_amount\", \"earnings_qualified_levels\"]",
											"            }",
											"        }",
											"    }, \"required\":[\"success\", \"payout_history\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/bonus/pool-bonus/payout-history",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"pool-bonus",
										"payout-history"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Binary Bonus",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Binary Bonus Daily Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/binary-bonus/daily/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"binary-bonus",
										"daily",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Binary Bonus Daily Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f66ad8-538d-4aa7-928f-e3addc6b007d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"year\": \"string\",",
											"        \"month\": \"string\",",
											"        \"week\": \"string\",",
											"        \"day\": \"string\",",
											"        \"payout_cap_limit\": \"string\",",
											"        \"entries\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"date\": \"string\",",
											"                    \"payout\": \"string\",",
											"                    \"cumulative_revenue\": \"string\"",
											"                },",
											"                \"required\": [\"date\", \"payout\", \"cumulative_revenue\"]",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"year\",",
											"        \"month\",",
											"        \"week\",",
											"        \"day\",",
											"        \"payout_cap_limit\",",
											"        ",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "day",
											"value": "{{day}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/bonus/binary-bonus/daily",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"binary-bonus",
										"daily"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Binary Bonus Weekly Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/binary-bonus/weekly/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"binary-bonus",
										"weekly",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Binary Bonus Weekly Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f66ad8-538d-4aa7-928f-e3addc6b007d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"year\": \"string\",",
											"        \"month\": \"string\",",
											"        \"week\": \"string\",",
											"        \"highest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"highest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"total_payout\": \"string\",",
											"        \"total_loss\": \"string\",",
											"        \"from\": \"string\",",
											"        \"to\": \"string\",",
											"        \"right_revenue\": \"string\",",
											"        \"left_revenue\": \"string\",",
											"        \"total_revenue\": \"string\",",
											"        \"entries\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"day\": \"string\",",
											"                    \"payout\": \"string\",",
											"                    \"loss\": \"string\"",
											"                },",
											"                \"required\": [\"day\", \"payout\", \"loss\"]",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"year\",",
											"        \"month\",",
											"        \"week\",",
											"        \"highest_cumulative_payout\",",
											"        \"lowest_cumulative_payout\",",
											"        \"highest_loss\",",
											"        \"lowest_loss\",",
											"        \"total_payout\",",
											"        \"total_loss\",",
											"        \"from\",",
											"        \"to\",",
											"        \"right_revenue\",",
											"        \"left_revenue\",",
											"        \"total_revenue\"",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "year",
											"value": "{{year}}",
											"type": "text"
										},
										{
											"key": "month",
											"value": "{{month}}",
											"type": "text"
										},
										{
											"key": "week",
											"value": "{{week}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/bonus/binary-bonus/weekly",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"binary-bonus",
										"weekly"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Binary Bonus Monthly Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/binary-bonus/monthly/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"binary-bonus",
										"monthly",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Binary Bonus Monthly Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f66ad8-538d-4aa7-928f-e3addc6b007d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"highest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"highest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"total_payout\": \"string\",",
											"        \"total_loss\": \"string\",",
											"        \"from\": \"string\",",
											"        \"to\": \"string\",",
											"        \"right_revenue\": \"string\",",
											"        \"left_revenue\": \"string\",",
											"        \"total_revenue\": \"string\",",
											"        \"entries\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"week\": \"string\",",
											"                    \"from\": \"string\",",
											"                    \"to\": \"string\",",
											"                    \"payout\": \"string\",",
											"                    \"loss\": \"string\"",
											"                },",
											"                \"required\": [\"week\", \"payout\", \"loss\", \"from\", \"to\"]",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"highest_cumulative_payout\",",
											"        \"lowest_cumulative_payout\",",
											"        \"highest_loss\",",
											"        \"lowest_loss\",",
											"        \"total_payout\",",
											"        \"total_loss\",",
											"        \"from\",",
											"        \"to\",",
											"        \"right_revenue\",",
											"        \"left_revenue\",",
											"        \"total_revenue\"",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "year",
											"value": "{{year}}",
											"type": "text"
										},
										{
											"key": "month",
											"value": "{{month}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/bonus/binary-bonus/monthly",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"binary-bonus",
										"monthly"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Binary Bonus Yearly Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/binary-bonus/yearly/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"binary-bonus",
										"yearly",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Binary Bonus Yearly Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f66ad8-538d-4aa7-928f-e3addc6b007d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"highest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_cumulative_payout\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"highest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"lowest_loss\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"total_payout\": \"string\",",
											"        \"total_loss\": \"string\",",
											"        \"from\": \"string\",",
											"        \"to\": \"string\",",
											"        \"right_revenue\": \"string\",",
											"        \"left_revenue\": \"string\",",
											"        \"total_revenue\": \"string\",",
											"        \"entries\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"month\": \"string\",",
											"                    \"payout\": \"string\",",
											"                    \"loss\": \"string\"",
											"                },",
											"                \"required\": [\"month\", \"payout\", \"loss\"]",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"highest_cumulative_payout\",",
											"        \"lowest_cumulative_payout\",",
											"        \"highest_loss\",",
											"        \"lowest_loss\",",
											"        \"total_payout\",",
											"        \"total_loss\",",
											"        \"from\",",
											"        \"to\",",
											"        \"right_revenue\",",
											"        \"left_revenue\",",
											"        \"total_revenue\"",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "year",
											"value": "{{year}}",
											"type": "text"
										},
										{
											"key": "month",
											"value": "1",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{url}}/bonus/binary-bonus/yearly",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"binary-bonus",
										"yearly"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Matching Bonus",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Matching Bonus Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/matching-bonus/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"matching-bonus",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Matching Bonus Current Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f85d86d9-0429-498e-b6fa-2444cd379cfd",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": \"boolean\",",
											"        \"current_matching_bonus_share\": \"string\",",
											"        \"current_matching_bonus_timestamp\": \"string\",",
											"        ",
											"    }, \"required\":[",
											"        \"success\",",
											"        \"current_matching_bonus_share\",",
											"        \"current_matching_bonus_timestamp\",",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/bonus/matching-bonus?",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"matching-bonus"
									],
									"query": [
										{
											"key": "token",
											"value": "{{token}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
                {
					"name": "Matching Bonus History",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6035670d-45f7-450b-ab60-fb87b736a397",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Mock Matching Bonus History Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/matching-bonus/history/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"matching-bonus",
										"history",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Matching Bonus History Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f66ad8-538d-4aa7-928f-e3addc6b007d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": \"boolean\",",
											"        \"payout_history\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"payout_date\": \"string\",",
											"                    \"payout_amount\": \"string\",",
											"                },",
											"                \"required\": [\"payout_date\", \"payout_amount\"]",
											"            }",
											"        }",
											"        ",
											"    }, \"required\":[",
											"        \"success\",",
											"        \"payout_history\",",
											"    ]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "payout_date",
											"value": "{{day}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/bonus/matching-bonus/history",
									"host": [
										"{{url}}"
									],
									"path": [
										"bonus",
										"matching-bonus",
										"history"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bonus Payout",
					"item": [
						{
							"name": "Create Mock Bonus Payout Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"transaction_id\": \"{{transaction_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/integration/bonus-payout/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"bonus-payout",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bonus Payout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6d4a091-c111-4917-a224-2dc05824d112",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Signature",
										"value": "{{sp7_api_signature}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{sp7_api_key}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nonce\": \"abcdefgh\",\n\t\"transaction_id\": \"{{transaction_id}}\",\n\t\"transaction_type\": \"{{transaction_type}}\",\n\t\"transaction_status\": \"{{transaction_status}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/bonus/bonus-payout",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"bonus",
										"bonus-payout"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e8e626a-fc35-47f1-b7cc-ed51381b8b26",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "96214ae8-5cad-4335-acd5-514bb66cca65",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Notification",
					"description": "",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"type": "text",
											"value": "{{sponsor_email}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{sponsor_password}}"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"id": "1163ce7e-fdd3-422a-a0e1-184c03a85ff4",
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"name": "access-control-allow-origin",
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"name": "content-length",
											"key": "content-length",
											"value": "715",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "application/json",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"description": "A name for the server"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Origin",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"id": "34d6ed2f-e27f-403d-be16-c7e144dfebe8",
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get Notifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfa1b8a-914a-4bbb-8d28-1b9d5e601421",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"notifications\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"notification_id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"recipient\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"message\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"notification_type\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"purpose\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"date_received\": {",
											"                    \"type\": \"string\"",
											"                },\"required\":[\"notification_id\", \"recipient\", \"message\", \"notification_type\", \"purpose\", \"date_received\"]",
											"            }",
											"        },",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/notifications",
									"host": [
										"{{url}}"
									],
									"path": [
										"notifications"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Check Swapoo Account Status",
					"item": [
						{
							"name": "(SWP) Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915a3bc7-89c4-4afe-8ab4-532087f311a4",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       \"token\": {",
											"           \"type\": \"string\"",
											"       },",
											"       \"prompt_security_question\": \"boolean\",",
											"       \"prompt_setup_pin\": \"boolean\",",
											"       \"session_validity\": \"int\",",
											"       \"login_count_prompt\": \"int\",",
											"       \"is_payment_pw_exist\": \"boolean\",",
											"       \"wst\": \"int\",",
											"       \"profile_data\":{",
											"           \"type\":\"object\",",
											"           \"properties\":{",
											"               \"first_name\": \"string\",",
											"               \"middle_name\": \"null\",",
											"               \"last_name\": \"string\",",
											"               \"city_id\": \"null\",",
											"               \"city_name\": \"null\",",
											"               \"date_of_birth\": \"string\",",
											"               \"address_line_1\": \"string\",",
											"               \"address_line_2\": \"null\",",
											"               \"zip_code\": \"integer\",",
											"               \"avatar_link\": \"null\",",
											"               \"time_zone\": \"null\",",
											"               \"country_code\": \"string\",",
											"               \"country_name\": \"string\",",
											"               \"region_code\": \"null\",",
											"               \"region_name\": \"null\",",
											"               \"other_city\": \"string\",",
											"               \"other_region\": \"string\",",
											"               \"user_name\": \"string\",",
											"               \"email\": \"string\",",
											"               \"phone_code\": \"string\",",
											"               \"mobile_digit\": \"string\",",
											"               \"account_number\": \"string\",",
											"           }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                           \"address_line_1\",\"address_line_2\",\"zip_code\",",
											"                           \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                           \"region_name\",\"other_city\",\"other_region\",",
											"                           \"email\",\"phone_code\",\"mobile_digit\", \"account_number\"]",
											"       }",
											"       ",
											"   }, \"required\":[\"success\", \"token\", \"is_payment_pw_exist\", \"prompt_setup_pin\", \"session_validity\",",
											"                  \"login_count_prompt\", \"is_payment_pw_exist\", \"wst\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Approve Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b077740-1fdb-48a7-a229-1b6ebbf35fa2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       ",
											"   }, \"required\":[\"success\", ]",
											"};",
											"",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/approve-account?email={{email}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"approve-account"
									],
									"query": [
										{
											"key": "email",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Integration Feature Flag",
					"item": [
						{
							"name": "Enable/Disable Feature Flag",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/enable?feature_name=SPR-620&status=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"enable"
									],
									"query": [
										{
											"key": "feature_name",
											"value": "SPR-620"
										},
										{
											"key": "status",
											"value": "1"
										}
									]
								},
								"description": "Enables/disables a feature flag depending on the value passed. If 0, disabled, if greater than 0, enabled."
							},
							"response": []
						},
						{
							"name": "Feature Flag List",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"feature_flags\": [\"SPR-620\"]\n}"
								},
								"url": {
									"raw": "{{url}}/integration/check-feature-list",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"check-feature-list"
									]
								},
								"description": "Retrieves a list of feature flags"
							},
							"response": []
						},
						{
							"name": "Feature Flag",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"feature_flags\": [\"SPR-620\"]\n}"
								},
								"url": {
									"raw": "{{url}}/integration/check-feature?key=SPR-620",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"check-feature"
									],
									"query": [
										{
											"key": "key",
											"value": "SPR-620"
										}
									]
								},
								"description": "Retrieves a list of feature flags"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},

				{
					"name": "Approve Account",
					"item": [
						{
							"name": "Approve Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b077740-1fdb-48a7-a229-1b6ebbf35fa2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       ",
											"   }, \"required\":[\"success\", ]",
											"};",
											"",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/approve-account?email={{email}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"approve-account"
									],
									"query": [
										{
											"key": "email",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}

			]
		},
		{
			"name": "2FA Disabled",
			"item": [
				{
					"name": "Deactivate SPR-620",
					"item": [
						{
							"name": "Change Feature SPR-620 Status to Inactive",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "0",
											"type": "text"
										},
										{
											"key": "key",
											"value": "SPR-620",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Package from package details page",
					"item": [
						{
							"name": "Provision Wallet Balance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"data",
										"wst"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}"
										},
										{
											"key": "wst",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get security matrix rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11678c85-d2ee-46eb-b87f-d3477ff14b40",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"rules\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"rules\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-matrix?process=product_purchase",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-matrix"
									],
									"query": [
										{
											"key": "process",
											"value": "product_purchase"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get security matrix rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/security_matrix/rules?process=product_purchase",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"security_matrix",
												"rules"
											],
											"query": [
												{
													"key": "process",
													"value": "product_purchase"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "34",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:49 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"rules\": [\"PP\"], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package catalog",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7d82d5c-5e78-4a3b-b868-cb9284d28dd0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\"]",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"packages\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/catalog?",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"catalog"
									],
									"query": [
										{
											"key": "Token",
											"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package catalog",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/catalog?",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"catalog"
											],
											"query": [
												{
													"key": "Token",
													"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1302",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:52 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"packages\": [{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"is_purchasable\": true}, {\"package_code\": \"F7LRLPQH\", \"package_title\": \"Gold\", \"package_price\": \"1000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Gold\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-gold.png\"], \"is_purchasable\": true}, {\"package_code\": \"GW5CDQUL\", \"package_title\": \"Silver\", \"package_price\": \"2500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Silver\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-silver.png\"], \"is_purchasable\": false}, {\"package_code\": \"ZQEF6H3K\", \"package_title\": \"Platinum\", \"package_price\": \"4000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Platinum\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-platinum.png\"], \"is_purchasable\": false}], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1f2bba3-73f4-46fb-86ae-8fdb6dd220ac",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                }",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package?package_code=HZRUYX7P",
									"host": [
										"{{url}}"
									],
									"path": [
										"package"
									],
									"query": [
										{
											"key": "package_code",
											"value": "HZRUYX7P"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package?package_code=HZRUYX7P",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package"
											],
											"query": [
												{
													"key": "package_code",
													"value": "HZRUYX7P"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "611",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:55 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"success\": true, \"is_purchasable\": true, \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\"}"
								}
							]
						},
						{
							"name": "Verify swapoo password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0c0a5e6-c501-4823-a17c-81b6ffa4a5e9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"package_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"usd_btc_rate\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_btc_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_currency\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_description\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"transaction_date\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"tx_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"swapoo_process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"    }, ",
											"    \"required\":[\"process_id\", \"success\", \"package_code\", \"package_title\", \"package_price\", \"usd_btc_rate\",",
											"                \"package_btc_price\", \"package_currency\", \"package_description\", \"transaction_date\", \"tx_id\",",
											"                \"swapoo_process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "swapoo_password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "tx_id",
											"value": "{{purchase_tx_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/package/purchase/password/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"package",
										"purchase",
										"password",
										"verify"
									]
								}
							},
							"response": [
								{
									"name": "Verify swapoo password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "swapoo_password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "tx_id",
													"value": "{{purchase_tx_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/purchase/verify/password",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"purchase",
												"verify",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "71",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"process_id\": \"ed23b3dc-118f-a84d-8652-9f53fb025ece\", \"success\": true}"
								}
							]
						},
						{
							"name": "Get final confirmation screen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c216564-7eb8-43d6-a30b-b784e1ad135d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"package_btc_price\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"usd_btc_rate\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\", \"tx_id\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/purchase/transactions?tx_id={{purchase_tx_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"transactions"
									],
									"query": [
										{
											"key": "tx_id",
											"value": "{{purchase_tx_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get final confirmation screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction?tx_id={{purchase_tx_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction"
											],
											"query": [
												{
													"key": "tx_id",
													"value": "{{purchase_tx_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:59 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"usd_btc_rate\": 10331.925, \"package_btc_price\": 0.04839369, \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"package_transaction_status\": \"pending\", \"transaction_date\": \"01/26/2018\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"success\": true}"
								}
							]
						},
						{
							"name": "Confirm purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e1fc94-9746-4ac0-b0b5-1617c47e02fd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"confirmation_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"confirmation_code\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/confirm?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"confirm"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Confirm purchase",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction/confirm?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction",
												"confirm"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "49",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:02 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"confirmation_code\": \"MLR7XEC\", \"success\": true}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5a22d67d-62e9-42a3-baa5-3dc5e9b58c88",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7293689-9f29-485b-93b6-8eb364544775",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Package from package catalog",
					"item": [
						{
							"name": "Provision Wallet Balance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"data",
										"wst"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}"
										},
										{
											"key": "wst",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "719",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:29 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"48bcf112-5a1d-bd33-00e7-5132a16ac289\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": \"random\", \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "(SWP) Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db9aad29-8722-4957-b6cc-386487f874f3",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       \"token\": {",
											"           \"type\": \"string\"",
											"       },",
											"       \"prompt_security_question\": \"boolean\",",
											"       \"prompt_setup_pin\": \"boolean\",",
											"       \"session_validity\": \"int\",",
											"       \"login_count_prompt\": \"int\",",
											"       \"is_payment_pw_exist\": \"boolean\",",
											"       \"wst\": \"int\",",
											"       \"profile_data\":{",
											"           \"type\":\"object\",",
											"           \"properties\":{",
											"               \"first_name\": \"string\",",
											"               \"middle_name\": \"null\",",
											"               \"last_name\": \"string\",",
											"               \"city_id\": \"null\",",
											"               \"city_name\": \"null\",",
											"               \"date_of_birth\": \"string\",",
											"               \"address_line_1\": \"string\",",
											"               \"address_line_2\": \"null\",",
											"               \"zip_code\": \"integer\",",
											"               \"avatar_link\": \"null\",",
											"               \"time_zone\": \"null\",",
											"               \"country_code\": \"string\",",
											"               \"country_name\": \"string\",",
											"               \"region_code\": \"null\",",
											"               \"region_name\": \"null\",",
											"               \"other_city\": \"string\",",
											"               \"other_region\": \"string\",",
											"               \"user_name\": \"string\",",
											"               \"email\": \"string\",",
											"               \"phone_code\": \"string\",",
											"               \"mobile_digit\": \"string\",",
											"               \"account_number\": \"string\",",
											"           }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                           \"address_line_1\",\"address_line_2\",\"zip_code\",",
											"                           \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                           \"region_name\",\"other_city\",\"other_region\",",
											"                           \"email\",\"phone_code\",\"mobile_digit\", \"account_number\"]",
											"       }",
											"       ",
											"   }, \"required\":[\"success\", \"token\", \"is_payment_pw_exist\", \"prompt_setup_pin\", \"session_validity\",",
											"                  \"login_count_prompt\", \"is_payment_pw_exist\", \"wst\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"swapoo_token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Approve Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cac35d9f-4e87-4246-9c23-ac803a59d931",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{swapoo_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{login_credential}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/approve-account",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"approve-account"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get security matrix rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11678c85-d2ee-46eb-b87f-d3477ff14b40",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"rules\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"rules\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-matrix?process=product_purchase",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-matrix"
									],
									"query": [
										{
											"key": "process",
											"value": "product_purchase"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get security matrix rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/security_matrix/rules?process=product_purchase",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"security_matrix",
												"rules"
											],
											"query": [
												{
													"key": "process",
													"value": "product_purchase"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "34",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:31 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"rules\": [\"PP\"], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package catalog",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7d82d5c-5e78-4a3b-b868-cb9284d28dd0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\"]",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"packages\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/catalog?",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"catalog"
									],
									"query": [
										{
											"key": "Token",
											"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package catalog",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/catalog?",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"catalog"
											],
											"query": [
												{
													"key": "Token",
													"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1302",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:33 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"packages\": [{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"is_purchasable\": true}, {\"package_code\": \"F7LRLPQH\", \"package_title\": \"Gold\", \"package_price\": \"1000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Gold\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-gold.png\"], \"is_purchasable\": true}, {\"package_code\": \"GW5CDQUL\", \"package_title\": \"Silver\", \"package_price\": \"2500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Silver\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-silver.png\"], \"is_purchasable\": false}, {\"package_code\": \"ZQEF6H3K\", \"package_title\": \"Platinum\", \"package_price\": \"4000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Platinum\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-platinum.png\"], \"is_purchasable\": false}], \"success\": true}"
								}
							]
						},
						{
							"name": "Verify swapoo password (from catalog page)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2d7ceea-4609-4eae-9be6-fc02fc046bf8",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"package_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"usd_btc_rate\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_btc_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_currency\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_description\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"transaction_date\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"tx_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"swapoo_process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"package_code\", \"package_title\", \"package_price\", ",
											"                \"usd_btc_rate\", \"package_btc_price\", \"package_currency\",",
											"                \"package_description\", \"transaction_date\", \"tx_id\", ",
											"                \"swapoo_process_id\", \"process_id\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "swapoo_password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "package_code",
											"value": "{{package_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/password/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"password",
										"verify"
									]
								}
							},
							"response": [
								{
									"name": "Verify swapoo password (from catalog page)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "swapoo_password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "package_code",
													"value": "HZRUYX7P",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/purchase/direct/verify/password",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"purchase",
												"direct",
												"verify",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "71",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:36 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"process_id\": \"58cff101-9deb-bfb1-fb8f-c55d8bef6f97\", \"success\": true}"
								}
							]
						},
						{
							"name": "Get final confirmation screen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c216564-7eb8-43d6-a30b-b784e1ad135d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"package_btc_price\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"usd_btc_rate\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\", \"tx_id\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/purchase/transactions?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"transactions"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get final confirmation screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"usd_btc_rate\": 10331.925, \"package_btc_price\": 0.04839369, \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"package_transaction_status\": \"pending\", \"transaction_date\": \"01/26/2018\", \"tx_id\": \"dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"success\": true}"
								}
							]
						},
						{
							"name": "Confirm purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e1fc94-9746-4ac0-b0b5-1617c47e02fd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"confirmation_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"confirmation_code\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/confirm?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"confirm"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Confirm purchase",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction/confirm?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction",
												"confirm"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "49",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:44 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"confirmation_code\": \"H77RJNA\", \"success\": true}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Reset Security Question",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdf9e0af-34aa-4841-9e61-aba69a9f1a97",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "captcha_response",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Security Question Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fd2d4f3-7c92-4884-8ecb-2328f42bf16d",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"     pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-question/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-question",
										"reset"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "2FA Enabled",
			"item": [
				{
					"name": "Enable 2FA (SWP)",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       \"token\": {",
											"           \"type\": \"string\"",
											"       },",
											"       \"prompt_security_question\": \"boolean\",",
											"       \"prompt_setup_pin\": \"boolean\",",
											"       \"session_validity\": \"int\",",
											"       \"login_count_prompt\": \"int\",",
											"       \"is_payment_pw_exist\": \"boolean\",",
											"       \"wst\": \"int\",",
											"       \"profile_data\":{",
											"           \"type\":\"object\",",
											"           \"properties\":{",
											"               \"first_name\": \"string\",",
											"               \"middle_name\": \"null\",",
											"               \"last_name\": \"string\",",
											"               \"city_id\": \"null\",",
											"               \"city_name\": \"null\",",
											"               \"date_of_birth\": \"string\",",
											"               \"address_line_1\": \"string\",",
											"               \"address_line_2\": \"null\",",
											"               \"zip_code\": \"integer\",",
											"               \"avatar_link\": \"null\",",
											"               \"time_zone\": \"null\",",
											"               \"country_code\": \"string\",",
											"               \"country_name\": \"string\",",
											"               \"region_code\": \"null\",",
											"               \"region_name\": \"null\",",
											"               \"other_city\": \"string\",",
											"               \"other_region\": \"string\",",
											"               \"user_name\": \"string\",",
											"               \"email\": \"string\",",
											"               \"phone_code\": \"string\",",
											"               \"mobile_digit\": \"string\",",
											"               \"account_number\": \"string\",",
											"           }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                           \"address_line_1\",\"address_line_2\",\"zip_code\",",
											"                           \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                           \"region_name\",\"other_city\",\"other_region\",",
											"                           \"email\",\"phone_code\",\"mobile_digit\", \"account_number\"]",
											"       }",
											"       ",
											"   }, \"required\":[\"success\", \"token\", \"is_payment_pw_exist\", \"prompt_setup_pin\", \"session_validity\",",
											"                  \"login_count_prompt\", \"is_payment_pw_exist\", \"wst\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "db9aad29-8722-4957-b6cc-386487f874f3",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64166356-04b1-4fb2-a279-44fdb11f4f17",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       \"is_2fa_key_existing\": {",
											"           \"type\":\"boolean\"",
											"       },",
											"       \"process_id\": {",
											"           \"type\":\"string\"",
											"       }",
											"   }, \"required\":[\"success\", \"is_2fa_key_existing\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "{{swapoo_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/enable/password/verify",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"enable",
										"password",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b0ffb27-93ca-4bcf-9c24-d15483b32d61",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       },",
											"       \"key\": {",
											"           \"type\":\"string\"",
											"       },",
											"       \"uri\": {",
											"           \"type\":\"string\"",
											"       }",
											"   }, \"required\":[\"success\", \"key\", \"uri\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/enable/key/generate",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"enable",
										"key",
										"generate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da2391a8-921b-45e4-a7bd-d757955ddabf",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       }",
											"   }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{default_2fa_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/enable",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"enable"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify 2FA Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       }",
											"   }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "73de425e-7541-4933-9679-661708a1bf90",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{edit_2fa_settings}}",
											"type": "text"
										},
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/verification/2fa/code/verify",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"verification",
										"2fa",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change 2FA Action Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       }",
											"   }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "da2391a8-921b-45e4-a7bd-d757955ddabf",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"process_id\": \"{{process_id}}\",\n\t\"2fa_actions\": {\n\t\t\"SETUP_SECURITY_QUESTION\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/change",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"change"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Deactivate SPR-620",
					"item": [
						{
							"name": "Change Feature SPR-620 Status to Inactive",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "0",
											"type": "text"
										},
										{
											"key": "key",
											"value": "SPR-620",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/integration/feature-flag/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"integration",
										"feature-flag",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Package from package details page",
					"item": [
						{
							"name": "(SWP) Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a12b7068-350c-4ed1-beb0-bdf34895b4d4",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login?login_credential={{email}}&password={{swapoo_password}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{email}}"
										},
										{
											"key": "password",
											"value": "{{swapoo_password}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Verify 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c79b1a24-d297-41c7-9791-cdec9b30b921",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/verification/2fa/code/verify?process_id=EDIT_2FA_SETTINGS&two_fa_code={{default_2fa_code}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"verification",
										"2fa",
										"code",
										"verify"
									],
									"query": [
										{
											"key": "process_id",
											"value": "EDIT_2FA_SETTINGS"
										},
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Enable Merchant Purchase 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8c09290-a624-41c2-9614-5456a3918a92",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"process_id\": \"{{process_id}}\",\n\t\"2fa_actions\": {\n      \"{{2fa_action_merchant_purchase}}\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/change",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"change"
									]
								}
							},
							"response": []
						},
						{
							"name": "Provision Wallet Balance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"data",
										"wst"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}"
										},
										{
											"key": "wst",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{[captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "1 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "access-control-allow-origin",
											"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
											"name": "access-control-allow-origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "content-length",
											"value": "715",
											"name": "content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "content-type",
											"value": "application/json",
											"name": "content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "date",
											"value": "Tue, 23 Jan 2018 08:09:11 GMT",
											"name": "date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "server",
											"value": "Werkzeug/0.12.2 Python/3.6.3",
											"name": "server",
											"description": "A name for the server"
										},
										{
											"key": "vary",
											"value": "Origin",
											"name": "vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\"token\": \"f2c2ae34-6d92-b4c1-6523-27d22f5f59df\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								},
								{
									"name": "0 - Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "715",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 00:40:34 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"e2485a53-6182-78c0-7c3f-fd450d258ee4\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": null, \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get security matrix rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11678c85-d2ee-46eb-b87f-d3477ff14b40",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"rules\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"rules\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-matrix?process=product_purchase",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-matrix"
									],
									"query": [
										{
											"key": "process",
											"value": "product_purchase"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get security matrix rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/security_matrix/rules?process=product_purchase",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"security_matrix",
												"rules"
											],
											"query": [
												{
													"key": "process",
													"value": "product_purchase"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "34",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:49 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"rules\": [\"PP\"], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package catalog",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7d82d5c-5e78-4a3b-b868-cb9284d28dd0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\"]",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"packages\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/catalog?",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"catalog"
									],
									"query": [
										{
											"key": "Token",
											"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package catalog",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/catalog?",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"catalog"
											],
											"query": [
												{
													"key": "Token",
													"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1302",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:52 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"packages\": [{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"is_purchasable\": true}, {\"package_code\": \"F7LRLPQH\", \"package_title\": \"Gold\", \"package_price\": \"1000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Gold\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-gold.png\"], \"is_purchasable\": true}, {\"package_code\": \"GW5CDQUL\", \"package_title\": \"Silver\", \"package_price\": \"2500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Silver\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-silver.png\"], \"is_purchasable\": false}, {\"package_code\": \"ZQEF6H3K\", \"package_title\": \"Platinum\", \"package_price\": \"4000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Platinum\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-platinum.png\"], \"is_purchasable\": false}], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1f2bba3-73f4-46fb-86ae-8fdb6dd220ac",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                }",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package?package_code=HZRUYX7P",
									"host": [
										"{{url}}"
									],
									"path": [
										"package"
									],
									"query": [
										{
											"key": "package_code",
											"value": "HZRUYX7P"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package?package_code=HZRUYX7P",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package"
											],
											"query": [
												{
													"key": "package_code",
													"value": "HZRUYX7P"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "611",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:55 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"success\": true, \"is_purchasable\": true, \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\"}"
								}
							]
						},
						{
							"name": "Verify swapoo password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b01ef3a8-81af-4a2a-8cf6-550b7b94bc1d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"package_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"usd_btc_rate\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_btc_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_currency\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_description\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"transaction_date\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"tx_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"swapoo_process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"    }, ",
											"    \"required\":[\"process_id\", \"success\", \"package_code\", \"package_title\", \"package_price\", \"usd_btc_rate\",",
											"                \"package_btc_price\", \"package_currency\", \"package_description\", \"transaction_date\", \"tx_id\",",
											"                \"swapoo_process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"    pm.environment.set(\"swapoo_process_id\", jsonData.swapoo_process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "swapoo_password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "tx_id",
											"value": "{{purchase_tx_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/package/purchase/password/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"package",
										"purchase",
										"password",
										"verify"
									]
								}
							},
							"response": [
								{
									"name": "Verify swapoo password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "swapoo_password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "tx_id",
													"value": "{{purchase_tx_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/purchase/verify/password",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"purchase",
												"verify",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "71",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"process_id\": \"ed23b3dc-118f-a84d-8652-9f53fb025ece\", \"success\": true}"
								}
							]
						},
						{
							"name": "Verify 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e5e8bc2-bf65-42a5-930f-a7a468386516",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/two-factor-authentication/via-api/code/verify?two_fa_code={{default_2fa_code}}&swapoo_process_id={{swapoo_process_id}}&process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"two-factor-authentication",
										"via-api",
										"code",
										"verify"
									],
									"query": [
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}"
										},
										{
											"key": "swapoo_process_id",
											"value": "{{swapoo_process_id}}"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get final confirmation screen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c216564-7eb8-43d6-a30b-b784e1ad135d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"package_btc_price\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"usd_btc_rate\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\", \"tx_id\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/purchase/transactions?tx_id={{purchase_tx_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"transactions"
									],
									"query": [
										{
											"key": "tx_id",
											"value": "{{purchase_tx_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get final confirmation screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction?tx_id={{purchase_tx_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction"
											],
											"query": [
												{
													"key": "tx_id",
													"value": "{{purchase_tx_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:21:59 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"usd_btc_rate\": 10331.925, \"package_btc_price\": 0.04839369, \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"package_transaction_status\": \"pending\", \"transaction_date\": \"01/26/2018\", \"tx_id\": \"d6967fb8-001e-0290-edf1-0ac2a87d66be\", \"success\": true}"
								}
							]
						},
						{
							"name": "Confirm purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e1fc94-9746-4ac0-b0b5-1617c47e02fd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"confirmation_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"confirmation_code\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/confirm?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"confirm"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Confirm purchase",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction/confirm?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction",
												"confirm"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "49",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:02 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"confirmation_code\": \"MLR7XEC\", \"success\": true}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5a22d67d-62e9-42a3-baa5-3dc5e9b58c88",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7293689-9f29-485b-93b6-8eb364544775",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Package from package catalog",
					"item": [
						{
							"name": "(SWP) Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a12b7068-350c-4ed1-beb0-bdf34895b4d4",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login?login_credential={{email}}&password={{swapoo_password}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{email}}"
										},
										{
											"key": "password",
											"value": "{{swapoo_password}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Approve Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cac35d9f-4e87-4246-9c23-ac803a59d931",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{login_credential}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/approve-account",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"approve-account"
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Verify 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c79b1a24-d297-41c7-9791-cdec9b30b921",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }, \"required\":[\"success\", \"process_id\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/verification/2fa/code/verify?process_id=EDIT_2FA_SETTINGS&two_fa_code={{default_2fa_code}}",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"verification",
										"2fa",
										"code",
										"verify"
									],
									"query": [
										{
											"key": "process_id",
											"value": "EDIT_2FA_SETTINGS"
										},
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Enable Merchant Purchase 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8c09290-a624-41c2-9614-5456a3918a92",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"process_id\": \"{{process_id}}\",\n\t\"2fa_actions\": {\n      \"{{2fa_action_merchant_purchase}}\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/change",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"change"
									]
								}
							},
							"response": []
						},
						{
							"name": "Provision Wallet Balance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{swapoo_url}}/integration/data/wst?login_credential={{login_credential}}&wst=1",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"integration",
										"data",
										"wst"
									],
									"query": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}"
										},
										{
											"key": "wst",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "719",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:29 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"48bcf112-5a1d-bd33-00e7-5132a16ac289\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": \"random\", \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Get security matrix rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11678c85-d2ee-46eb-b87f-d3477ff14b40",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"rules\": {",
											"            \"type\": \"array\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"rules\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-matrix?process=product_purchase",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-matrix"
									],
									"query": [
										{
											"key": "process",
											"value": "product_purchase"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get security matrix rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/security_matrix/rules?process=product_purchase",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"security_matrix",
												"rules"
											],
											"query": [
												{
													"key": "process",
													"value": "product_purchase"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "34",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:31 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"rules\": [\"PP\"], \"success\": true}"
								}
							]
						},
						{
							"name": "Get package catalog",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7d82d5c-5e78-4a3b-b868-cb9284d28dd0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\"]",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"packages\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/catalog?",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"catalog"
									],
									"query": [
										{
											"key": "Token",
											"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get package catalog",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/catalog?",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"catalog"
											],
											"query": [
												{
													"key": "Token",
													"value": "e3d35952-2b43-274d-cef0-a0b12e5557d3",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1302",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:33 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"packages\": [{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"is_purchasable\": true}, {\"package_code\": \"F7LRLPQH\", \"package_title\": \"Gold\", \"package_price\": \"1000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Gold\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-gold.png\"], \"is_purchasable\": true}, {\"package_code\": \"GW5CDQUL\", \"package_title\": \"Silver\", \"package_price\": \"2500\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Silver\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-silver.png\"], \"is_purchasable\": false}, {\"package_code\": \"ZQEF6H3K\", \"package_title\": \"Platinum\", \"package_price\": \"4000\", \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Platinum\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-platinum.png\"], \"is_purchasable\": false}], \"success\": true}"
								}
							]
						},
						{
							"name": "Verify swapoo password (from catalog page)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539ab5-472b-46d2-b0ee-ed67ee5d07c7",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"package_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"usd_btc_rate\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_btc_price\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_currency\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"package_description\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"transaction_date\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"tx_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"swapoo_process_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"package_code\", \"package_title\", \"package_price\", ",
											"                \"usd_btc_rate\", \"package_btc_price\", \"package_currency\",",
											"                \"package_description\", \"transaction_date\", \"tx_id\", ",
											"                \"swapoo_process_id\", \"process_id\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"process_id\", jsonData.process_id);",
											"    pm.environment.set(\"swapoo_process_id\", jsonData.swapoo_process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "swapoo_password",
											"value": "{{swapoo_password}}",
											"type": "text"
										},
										{
											"key": "package_code",
											"value": "{{package_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/password/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"password",
										"verify"
									]
								}
							},
							"response": [
								{
									"name": "Verify swapoo password (from catalog page)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "swapoo_password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "package_code",
													"value": "HZRUYX7P",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/purchase/direct/verify/password",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"purchase",
												"direct",
												"verify",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "71",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:36 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"process_id\": \"58cff101-9deb-bfb1-fb8f-c55d8bef6f97\", \"success\": true}"
								}
							]
						},
						{
							"name": "Verify 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e5e8bc2-bf65-42a5-930f-a7a468386516",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test('Schema is valid', function() {",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/two-factor-authentication/via-api/code/verify?two_fa_code={{default_2fa_code}}&swapoo_process_id={{swapoo_process_id}}&process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"two-factor-authentication",
										"via-api",
										"code",
										"verify"
									],
									"query": [
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}"
										},
										{
											"key": "swapoo_process_id",
											"value": "{{swapoo_process_id}}"
										},
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get final confirmation screen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c216564-7eb8-43d6-a30b-b784e1ad135d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"packages\": {",
											"            \"type\": \"array\",",
											"            \"properties\": {",
											"                \"package_code\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_price\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_currency\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_description\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"package_images\": {",
											"                    \"type\": \"array\"",
											"                },",
											"                \"is_purchasable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"qr_string\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"share_link\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"tx_id\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"package_btc_price\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"usd_btc_rate\": {",
											"                    \"type\": \"float\"",
											"                },",
											"                \"success\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                ",
											"            }, \"required\": [\"package_code\", \"package_title\", \"package_price\", \"package_currency\", \"package_description\", \"package_images\", \"is_purchaseable\", \"qr_string\", \"share_link\", \"tx_id\", \"success\", \"tx_id\"]",
											"        },",
											"    } ",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"purchase_tx_id\", jsonData.tx_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/package/purchase/transactions?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"transactions"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get final confirmation screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"package_code\": \"HZRUYX7P\", \"package_title\": \"Standard\", \"package_price\": \"500\", \"usd_btc_rate\": 10331.925, \"package_btc_price\": 0.04839369, \"package_currency\": \"USD\", \"package_description\": \"This is a sample package called Standard - Long description\", \"package_images\": [\"https://s3-ap-southeast-1.amazonaws.com/makatisoft-assets-kamekyo-sg-dev-be/package-standard.png\"], \"qr_string\": \"tag=MTX1.0&merchant=Kamekyo&tx_id=dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"share_link\": \"https://www.swapoo.com/purchase?tag=MTX1.0&merchant=Kamekyo&tx_id=dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"package_transaction_status\": \"pending\", \"transaction_date\": \"01/26/2018\", \"tx_id\": \"dc4f3d1b-8a34-75f5-f11d-18bfb248c07e\", \"success\": true}"
								}
							]
						},
						{
							"name": "Confirm purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e1fc94-9746-4ac0-b0b5-1617c47e02fd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\": {",
											"        \"confirmation_code\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }, ",
											"    \"required\":[\"confirmation_code\", \"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/package/purchase/confirm?process_id={{process_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"package",
										"purchase",
										"confirm"
									],
									"query": [
										{
											"key": "process_id",
											"value": "{{process_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Confirm purchase",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "process_id",
													"value": "{{process_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/package/transaction/confirm?process_id={{process_id}}",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"package",
												"transaction",
												"confirm"
											],
											"query": [
												{
													"key": "process_id",
													"value": "{{process_id}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "49",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:44 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"confirmation_code\": \"H77RJNA\", \"success\": true}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Reset Security Question",
					"item": [
						{
							"name": "(SWP) Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdf9e0af-34aa-4841-9e61-aba69a9f1a97",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"preferred_language\": \"null\",",
											"                \"preferred_currencies\": \"null\",",
											"                \"hide_balances\": \"boolean\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"                \"account_number\": \"string\",",
											"                \"date_registered\": \"string\",",
											"            }, \"required\":[\"first_name\",\"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",\"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",\"time_zone\",\"country_code\",\"country_name\",\"region_code\",\"region_name\",\"other_city\",\"other_region\",\"preferred_language\",\"preferred_currencies\",\"hide_balances\",\"email\",\"phone_code\",\"mobile_digit\",\"account_number\",\"date_registered\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "captcha_response",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/account/login",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Verify 2FA Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       }",
											"   }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"id": "73de425e-7541-4933-9679-661708a1bf90",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "process_id",
											"value": "{{edit_2fa_settings}}",
											"type": "text"
										},
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{swapoo_url}}/verification/2fa/code/verify",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"verification",
										"2fa",
										"code",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "(SWP) Change 2FA Action Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da2391a8-921b-45e4-a7bd-d757955ddabf",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"   \"properties\":{",
											"       \"success\": {",
											"           \"type\": \"boolean\"",
											"       }",
											"   }, \"required\":[\"success\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											" pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"process_id\": \"{{process_id}}\",\n\t\"2fa_actions\": {\n\t\t\"RESET_SECURITY_QUESTION\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{swapoo_url}}/two-factor-authentication/change",
									"host": [
										"{{swapoo_url}}"
									],
									"path": [
										"two-factor-authentication",
										"change"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4df5d762-4706-4295-9b05-92266b4d25b2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"profile_data\":{",
											"            \"type\":\"object\",",
											"            \"properties\":{",
											"                \"first_name\": \"string\",",
											"                \"middle_name\": \"null\",",
											"                \"last_name\": \"string\",",
											"                \"city_id\": \"null\",",
											"                \"city_name\": \"null\",",
											"                \"date_of_birth\": \"string\",",
											"                \"address_line_1\": \"string\",",
											"                \"address_line_2\": \"null\",",
											"                \"zip_code\": \"integer\",",
											"                \"avatar_link\": \"null\",",
											"                \"time_zone\": \"null\",",
											"                \"country_code\": \"string\",",
											"                \"country_name\": \"string\",",
											"                \"region_code\": \"null\",",
											"                \"region_name\": \"null\",",
											"                \"other_city\": \"string\",",
											"                \"other_region\": \"string\",",
											"                \"user_name\": \"string\",",
											"                \"email\": \"string\",",
											"                \"phone_code\": \"string\",",
											"                \"mobile_digit\": \"string\",",
											"            }, \"required\":[\"first_name\", \"middle_name\",\"last_name\",\"city_id\",\"city_name\",\"date_of_birth\",",
											"                            \"address_line_1\",\"address_line_2\",\"zip_code\",\"avatar_link\",",
											"                            \"time_zone\",\"country_code\",\"country_name\",\"region_code\",",
											"                            \"region_name\",\"other_city\",\"other_region\",\"user_name\",",
											"                            \"email\",\"phone_code\",\"mobile_digit\"]",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"token\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login_credential",
											"value": "{{login_credential}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "captcha_response",
											"value": "{{captcha_response}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/account/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Login user"
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login_credential",
													"value": "jhesed.tacadena@makatisoft.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{kamekyo_url}}/login",
											"host": [
												"{{kamekyo_url}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "close",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "719",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 26 Jan 2018 08:22:29 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.7.1",
											"name": "Server",
											"description": "A name for the server"
										}
									],
									"cookie": [],
									"body": "{\"token\": \"48bcf112-5a1d-bd33-00e7-5132a16ac289\", \"session_validity\": 1800, \"success\": true, \"swapoo_profile_info\": {\"prompt_security_questions\": true, \"is_security_questions_exist\": false}, \"profile_data\": {\"first_name\": \"jhesed\", \"middle_name\": null, \"last_name\": \"tacadena\", \"city_id\": null, \"city_name\": null, \"date_of_birth\": \"11/22/1990\", \"address_line_1\": \"test 1\", \"address_line_2\": null, \"zip_code\": 1300, \"avatar_link\": \"random\", \"time_zone\": null, \"country_code\": \"PH\", \"country_name\": \"Philippines\", \"region_code\": null, \"region_name\": null, \"other_city\": \"other\", \"other_region\": \"other\", \"user_name\": \"testddd\", \"email\": \"jhesed.tacadena@makatisoft.com\", \"phone_code\": \"63\", \"mobile_digit\": \"9776364662\"}}"
								}
							]
						},
						{
							"name": "Reset Security Question Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fd2d4f3-7c92-4884-8ecb-2328f42bf16d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\", \"is_2fa_enabled\"]",
											"};",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"     pm.environment.set(\"process_id\", jsonData.process_id);",
											"});",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/security-question/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"security-question",
										"reset"
									]
								}
							},
							"response": []
						},
						{
							"name": "2FA Verification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef910449-ec36-4400-96b3-5a607f6833ae",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"var schema = {",
											"\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"    \"properties\":{",
											"        \"success\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"        ",
											"    }, \"required\":[\"success\"]",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "two_fa_code",
											"value": "{{default_2fa_code}}",
											"type": "text"
										},
										{
											"key": "swapoo_process_id",
											"value": "{{process_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/two-factor-authentication/via-api/code/verify",
									"host": [
										"{{url}}"
									],
									"path": [
										"two-factor-authentication",
										"via-api",
										"code",
										"verify"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}
